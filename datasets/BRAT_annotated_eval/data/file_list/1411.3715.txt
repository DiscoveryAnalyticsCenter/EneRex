Acoustic Scene Classification

Abstract
In this article we present an account of the state-of-the-art in acoustic scene classification (ASC), the task of classifying environments from the sounds they produce. Starting from a historical review of previous research in this area, we define a general framework for ASC and present different implementations of its components. We then describe a range of different algorithms submitted for a data challenge that was held to provide a general and fair benchmark for ASC techniques. The dataset recorded for this purpose is presented, along with the performance metrics that are used to evaluate the algorithms and statistical significance tests to compare the submitted methods. We use a baseline method that employes MFCCS, GMMS and a maximum likelihood criterion as a benchmark, and only find sufficient evidence to conclude that three algorithms significantly outperform it. We also evaluate the human classification accuracy in performing a similar classification task. The best performing algorithm achieves a mean accuracy that matches the median accuracy obtained by humans, and common pairs of classes are misclassified by both computers and humans. However, all acoustic scenes are correctly classified by at least some individuals, while there are scenes that are misclassified by all algorithms.

I. INTRODUCTION
Enabling devices to make sense of their environment through the analysis of sounds is the main objective of research in machine listening, a broad investigation area related to computational auditory scene analysis (CASA)  #b49 . Machine listening systems perform analogous processing tasks to the human auditory system, and are part of a wider research theme linking fields such as machine learning, robotics and artificial intelligence.Acoustic scene classification (ASC) refers to the task of associating a semantic label to an audio stream that identifies the environment in which it has been produced. Throughout the literature on ASC, a distinction is made between psychoacoustic/psychological studies aimed at understanding the human cognitive processes that enable our understanding of acoustic scenes  #b33 , and computational algorithms that attempt to automatically perform this task using signal processing and machine learning methods.The perceptual studies have also been referred to as soundscape cognition  #b13 , by defining soundscapes as the auditory equivalent of landscapes  #b41 . In contrast, the computational research has also been called computational auditory scene recognition  #b36 . This is a particular task that is related to the area of CASA  #b49 , and is especially applied to the study of environmental sounds  #b16 . It is worth noting that, although many ASC studies are inspired by biological processes, ASC algorithms do not necessarily employ frameworks developed within CASA, and the two research fields do not completely overlap. In this paper we will mainly focus on computational research, though we will also present results obtained from human listening tests for comparison.Work in ASC has evolved in parallel with several related research problems. For example, methods for the classification of noise sources have been employed for noise monitoring systems  #b20  or to enhance the performance of speech-processing algorithms  #b15 . Algorithms for sound source recognition  #b11  attempt to identify the sources of acoustic events in a recording, and are closely related to event detection and classification techniques. The latter methods are aimed at identifying and labelling temporal regions containing single events of a specific class and have been employed, for example, in surveillance systems  #b38 , elderly assistance  #b24  and speech analysis through segmentation of acoustic scenes  #b27 . Furthermore, algorithms for the semantic analysis of audio streams that also rely on the recognition or clustering of sound events have been used for personal archiving  #b17  and audio segmentation  #b31  and retrieval  #b51 .The distinction between event detection and ASC can sometimes appear blurred, for example when considering systems for multimedia indexing and retrieval  #b7  where the identification of events such as the sound produced by a baseball hitter batting in a run also characterises the general environment baseball match. On the other hand, ASC can be employed to enhance the performance of sound event detection  #b26  by providing prior information about the probability of certain events. To limit the scope of this paper, we will only detail systems aimed at modelling complex physical environments containing multiple events.Applications that can specifically benefit from ASC include the design of context-aware services  #b43 , intelligent wearable devices  #b50 , robotics navigation systems  #b9  and audio archive management  #b30 .Concrete examples of possible future technologies that could be enabled by ASC include smartphones that continuously sense their surroundings, switching their mode to silent every time we enter a concert hall; assistive technologies such as hearing aids or robotic wheelchairs that adjust their functioning based on the recognition of indoor or outdoor environments; or sound archives that automatically assign metadata to audio files. Moreover, classification could be performed as a preprocessing step to inform algorithms developed for other applications, such as source separation of speech signals from different types of background noise. Although this paper details methods for the analysis of audio signals, it is worth mentioning that to address the above problems acoustic data can be combined with other sources of information such as geo-location, acceleration sensors, collaborative tagging and filtering.From a purely scientific point of view, ASC represents an interesting problem that both humans and machines are only able to solve to a certain extent. From the outset, semantic labelling of an acoustic scene or soundscape is a task open to different interpretations, as there is not a comprehensive taxonomy encompassing all the possible categories of environments. Researchers generally define a set of categories, record samples from these environments, and treat ASC as a supervised classification problem within a closed universe of possible classes. Furthermore, even within pre-defined categories, the set of acoustic events or qualities characterising a certain environment is generally unbounded, making it difficult to derive rules that unambiguously map acoustic events or features to scenes.In this paper we offer a tutorial and a survey of the state-of-the-art in ASC. We provide an overview of existing systems, and a framework that can be used to describe their basic components. We evaluate different techniques using signals and performance metrics especially created for an ASC signal processing challenge, and compare algorithmic results to human performance.

II. BACKGROUND: A HISTORY OF ACOUSTIC SCENE CLASSIFICATION
The first method appearing in the literature to specifically address the ASC problem was proposed by Sawhney and Maes  #b40  in a 1997 technical report from the MIT Media Lab. The authors recorded a dataset from a set of classes including 'people', 'voices', 'subway', 'traffic', and 'other'. They extracted several features from the audio data using tools borrowed from speech analysis and auditory research, employing recurrent neural networks and a k-nearest neighbour criterion to model the mapping between features and categories, and obtaining an overall classification accuracy of 68%. A year later, researchers from the same institution  #b10  recorded a continuous audio stream by wearing a microphone while making a few bicycle trips to a supermarket, and then automatically segmented the audio into different scenes (such as 'home', 'street' and 'supermarket'). For the classification, they fitted the empirical distribution of features extracted from the audio stream to Hidden Markov Models (HMM).Meanwhile, research in experimental psychology was focussing on understanding the perceptual processes driving the human ability to categorise and recognise sounds and soundscapes. Ballas  #b2  found that the speed and accuracy in the recognition of sound events is related to the acoustic nature of the stimuli, how often they occur, and whether they can be associated with a physical cause or a sound stereotype.Peltonen et. al.  #b35  observed that the human recognition of soundscapes is guided by the identification of typical sound events such as human voices or car engine noises, and measured an overall 70% accuracy in the human ability to discern among 25 acoustic scenes. Dubois et al.  #b13  investigated how individuals define their own taxonomy of semantic categories when this is not given a-priori by the experimenter.Finally, Tardieu et al.  #b45  tested both the emergence of semantic classes and the recognition of acoustic scenes within the context of rail stations. They reported that sound sources, human activities and room effects such as reverberation are the elements driving the formation of soundscape classes and the cues employed for recognition when the categories are fixed a-priori.Influenced by the psychoacoustic/psychological literature that emphasised both local and global characteristics for the recognition of soundscapes, some of the computational systems that built on the early works by researchers at the MIT  #b40 ,  #b10  focussed on modelling the temporal evolution of audio features.Eronen et al.  #b19  employed Mel-frequency cepstral coefficients (MFCCS) to describe the local spectral envelope of audio signals, and Gaussian mixture models (GMMS) to describe their statistical distribution.Then, they trained HMMS to account for the temporal evolution of the GMMS using a discriminative algorithm that exploited knowledge about the categories of training signals. Eronen and co-authors  #b18  further developed on this work by considering a larger group of features, and by adding a feature transform step to the classification algorithm, obtaining an overall 58% accuracy in the classification of 18 different acoustic scenes.In the algorithms mentioned so far, each signal belonging to a training set of recordings is generally divided into frames of fixed duration, and a transform is applied to each frame to obtain a sequence of feature vectors. The feature vectors derived from each acoustic scene are then employed to train a statistical model that summarises the properties of a whole soundscape, or of multiple soundscapes belonging to the same category. Finally, a decision criterion is defined to assign unlabelled recordings to the category that best matches the distribution of their features. A more formal definition of an ASC framework will be presented in Section III, and the details of a signal processing challenge we have organised to benchmark ASC methods will be presented in Section IV. Here we complete the historical overview of computational ASC and emphasise their main contributions in light of the components identified above.

A. Features
Several categories of audio features have been employed in ASC systems. Here we present a list of them, providing their rationale in the context of audio analysis for classification.1) Low-level time-based and frequency-based audio descriptors: several ASC systems [1, GSR] 1  #b18 ,  #b32  employ features that can be easily computed from either the signal in the time domain or its Fourier transform. These include (among others) the zero crossing rate which measures the average rate of sign changes within a signal, and is related to the main frequency of a monophonic sound; the spectral centroid, which measures the centre of mass of the spectrum and it is related to the perception of brightness  #b23 ; and the spectral roll-off that identifies a frequency above which the magnitude of the spectrum falls below a set threshold.2) Frequency-band energy features (energy/frequency): this class of features used by various ASC systems [1, NR CHR GSR]  #b18  is computed by integrating the magnitude spectrum or the power spectrum over specified frequency bands. The resulting coefficients measure the amount of energy present within different sub-bands, and can also be expressed as a ratio between the sub-band energy and the total energy to encode the most prominent frequency regions in the signal.3) Auditory filter banks: A further development of energy/frequency features consists in analysing audio frames through filter banks that mimic the response of the human auditory system. Sawhney and Maes  #b40  used Gammatone filters for this purpose, Clarkson et al.  #b10  instead computed Mel-scaled filter bank coefficients (MFCS), whereas Patil and Elahili [1, PE] employed a so-called auditory spectrogram. 1 Here and throughout the paper the notation [1, XXX] is used to cite the extended abstracts submitted for the DCASE challenge described in Section IV. The code XXX (e.g., "GSR") corresponds to a particular submission to the challenge (see Table I).

4) Cepstral features:
MFCCS are an example of cepstral features and are perhaps the most popular features used in ASC. They are obtained by computing the discrete cosine transform (DCT) of the logarithm of MFCS. The name cepstral is an anagram of spectral, and indicates that this class of features is computed by applying a Fourier-related transform to the spectrum of a signal. Cepstral features capture the spectral envelope of a sound, and thus summarise their coarse spectral content.

5) Spatial features:
If the soundscape has been recorded using multiple microphones, features can be extracted from the different channels to capture properties of the acoustic scene. In the case of a stereo recording, popular features include the inter-aural time difference (ITD) that measures the relative delay occurring between the left and right channels when recording a sound source; and the inter-aural level difference (ILD) measuring the amplitude variation between channels. Both ITD and ILD are linked to the position of a sound source in the stereo field. Nogueira et al. s(t) = L l=1 α l s(t − l) + (t)(1)where the combination coefficients {α l } L l=1 determine the model parameters and is a residual term. There is a mapping between the value of LPCS and the spectral envelope of the modelled signal  #b37 , therefore α l encode information regarding the general spectral characteristics of a sound. Eronen et al. s(t) = J j=1 α j φ j (t) + (t).(2)Whenever the basis functions φ j are parametrized by a set of parameters γ j , features can be defined according to the functions that contribute to the approximation of the signal. For example, Chu et al.  #b8  decompose audio scenes using the Gabor transform, that is a representation where each basis function is parametrized by its frequency f , its time scale u, its time shift τ and its frequency phase θ; so that  12) Event detection and acoustic unit descriptors: Heittola et al.  #b25  proposed a system for ASC that classifies soundscapes based on a histogram of events detected in a signal. During the training phase, the occurrence of manually annotated events (such as 'car horn', 'applause' or 'basketball') is used to derive models for each scene category. In the test phase, HMMS are employed to identify events within an unlabelled recording, and to define a histogram that is compared to the ones derived from the training data. This system represents an alternative to the common framework that includes features, statistical learning and a decision criterion, in that it essentially performs event detection and ASC at the same time. However, for the purpose of this tutorial, the acoustic events can be thought as high-level features whose statistical properties are described by histograms.γ j = {f j , u j , τ j , θ j }.A similar strategy is employed by Chauduri et al.  #b7  to learn acoustic unit descriptors (AUDS) andclassify YouTube multimedia data. AUDS are modelled using HMMS, and used to transcribe an audio recording into a sequence of events. The transcriptions are assumed to be generated by N-gram language models whose parameters are trained on different soundscapes categories. The transcriptions of unlabelled recordings during the test phase are thus classified following a maximum likelihood criterion.

B. Feature processing
The features described so far can be further processed to derive new quantities that are used either in place or as an addition to the original features. to be separable, and it is used to select optimal subsets of features.2) Time derivatives: For all the quantities computed on local frames, discrete time derivatives between consecutive frames can be included as additional features that identify the time evolution of the properties of an audio scene.Once features are extracted from audio frames, the next stage of an ASC system generally consists of learning statistical models of the distribution of the features.

C. Statistical models
Statistical models are parametric mathematical models used to summarise the properties of individual audio scenes or whole soundscape categories from the feature vectors. They can be divided into generative or discriminative methods.When working with generative models, feature vectors are interpreted as being generated from one of a set of underlying statistical distributions. During the training stage, the parameters of the distributions are optimised based on the statistics of the training data. In the test phase, a decision criterion is defined to determine the most likely model that generated a particular observed example. A simple implementation of this principle is to compute basic statistical properties of the distribution of feature vectors belonging to different categories (such as their mean values), hence obtaining one class centroid for each category.The same statistic can be computed for each unlabelled sample that is assumed to be generated according to the distribution with the closest centroid, and is assigned to the corresponding category.When using a discriminative classifier, on the other hand, features derived from an unlabelled sample are not interpreted as being generated by a class-specific distribution, but are assumed to occupy a class-specific region in the feature space. One of the most popular discriminative classifiers for ASC is the support vector machine (SVM). The model output from an SVM determines a set of hyperplanes that optimally separate features associated to different classes in the training set (according to a maximummargin criterion). An SVM can only discriminate between two classes. However, when the classification problem includes more than two categories (as is the case of the ASC task presented in this paper), multiple SVMS can be combined to determine a decision criterion that allows to discriminate between Q classes. In the one versus all approach, Q SVMS are trained to discriminate between data belonging to one class and data from the remaining Q − 1 classes. Instead, in the one versus one approach Q(Q − 1)/2SVMS are trained to classify between all the possible class combinations. In both cases, the decision criterion estimates the class from an unlabelled sample by evaluating the distance between the data and the separating hyperplanes learned by the SVMS.Discriminative models can be combined with generative ones. For example, one might use the parameters of generative models learned from training data to define a feature space, and then employ an SVM to learn separating hyperplanes. In other words, discriminative classifiers can be used to derive classification criteria from either the feature vectors or from the parameters of their statistical models. In the former case, the overall classification of an acoustic scene must be decided from the classification of individual data frames using, for example, a majority vote.Different statistical models have been used for computational ASC, and the following list highlights their categories.

1) Descriptive statistics: Several techniques for ASC [1, KH GSR RNH] employ descriptive statistics.
This class of methods is used to quantify various aspects of statistical distributions, including moments (such as mean, variance, skewness and kurtosis of a distribution), quantiles and percentiles.2) Gaussian mixture models (GMMS): Other methods for ASC  #b9 ,  #b0  employ GMMS, that are generative methods where feature vectors are interpreted as being generated by a multi-modal distribution expressed as a sum of Gaussian distributions. GMMS will be further detailed in Section A where we will present a baseline ASC system used for benchmark.

3) Hidden Markov Models (HMMS):
This class of models are used in several ASC systems  #b10 ,  #b18  to account for the temporal unfolding of events within complex soundscapes. Suppose, for example, that an acoustic scene recorded in an underground train includes an alert sound preceding the sound of the doors closing and the noise of the electric motor moving the carriage to the next station. Features extracted from these three distinct sounds could be modelled using Gaussian densities with different parameters, and the order in which the events normally occur would be encoded in an HMM transition matrix. This contains the transition probability between different states at successive times, that is the probability of each sound occurring after each other. A transition matrix that correctly models the unfolding of events in an underground train would contain large diagonal elements indicating the probability of sounds persisting in time, significant probabilities connecting events that occur after each other (the sound of motors occurring after the sound of doors occurring after the alert sound), and negligible probabilities connecting sounds that occur in the wrong order (for example the doors closing before the alert sound). determinism which is correlated to sounds periodicities and laminarity that captures sounds containing stationary segments. The outputs of the statistical learning function are a set of parameters that model each acoustic scene in the training set. This collection of parameters is then fed to an SVM to define decision boundaries between classes that are used to classify unlabelled signals.

5) i-vector: The system proposed by Elizalde et al. [1, ELF] is based on the computation of the
i-vector  #b12 . This is a technique originally developed in the speech processing community to address a speaker verification problem, and it is based on modelling a sequence of features using GMMS. In the context of ASC, the i-vector is specifically derived as a function of the parameters of the GMMS learned from MFCCS. It leads to a low-dimensional representation summarising the properties of an acoustic scene, and is input to a generative probabilistic linear discriminant analysis (PLDA)  #b28 .

D. Decision criteria
Decision criteria are functions used to determine the category of an unlabelled sample from its feature vectors and from the statistical model learned from the set of training samples. Decisions criteria are generally dependent on the type of statistical learning methods used, and the following list details how different models are associated to the respective criteria.1) One-vs-one and one-vs-all: this pair of decision criteria are associated to the output of a multi-class SVM, and are used to map the position of a features vector to a class, as already described in Section II-C.2) Majority vote: This criterion is used whenever a global classification must be estimated from decisions about single audio frames. Usually, an audio scene is classified according to the most common category assigned to its frames. Alternatively, a weighted majority vote can be employed to vary the importance of different frames. Patil and Elahili [1, PE], for example, assign larger weights to audio frames containing more energy.3) Nearest neighbour: According to this criterion, a feature vector is assigned to the class associated to the closest vector from the training set (according to a metric, often the Euclidean distance). A generalisation of nearest neighbour is the k-nearest neighbour criterion, whereby the k closest vectors are considered and a category is determined according to the most common classification.

4) Maximum likelihood:
This criterion is associated with generative models, whereby feature vectors are assigned to the category whose model is most likely to have generated the observed data according to a likelihood probability.

5) Maximum a posteriori:
An alternative to maximum likelihood classification is the maximum a posteriori (MAP) criterion that includes information regarding the marginal likelihood of any given class.For instance, suppose that a GPS system in a mobile device indicates that in the current geographic area some environments are more likely to be encountered than others. This information could be included in an ASC algorithm through a MAP criterion.

E. Meta-algorithms
In A tree-bagger is an example of a classification meta-algorithm that computes multiple so called weak learners (classifiers whose accuracy is only assumed to be better than chance) from randomly-sampled copies of the training data following a process called bootstrapping. In the method proposed by Lee et al. the ensemble of weak learners are then combined to determine a category for each frame, and in the test phase an overall category is assigned to each acoustic scene based on a majority vote.2) Normalized compression dissimilarity and random forest: Olivetti [1, OE] adopts a system for ASC that departs from techniques described throughout this paper in favour of a method based on audio compression and random forest. Motivated by the theory of Kolmogorov complexity which measures the shortest binary program that outputs a signal, and that is approximated using compression algorithms, he defines a normalised compression distance between two audio scenes. This is a function of the size in bits of the files obtained by compressing the acoustic scenes using any suitable audio coder. From the set of pairwise distances, a classification is obtained using a random forest, that is a meta-algorithm based on decision trees.

3) Majoriy vote and boosting:
The components of a classification algorithm can be themselves thought as parameters subject to optimisation. Thus, a further class of meta-algorithms deals with selecting from or combining multiple classifiers to improve the classification accuracy. Perhaps the simplest implementation of this general idea is to run several classification algorithms in parallel on each test sample and determine the optimal category by majority vote, an approach that will be also used in Section VI of this article. Other more sophisticated methods include boosting techniques  #b42  where the overall classification criterion is a function of linear combinations involving a set of weak learners.

III. A GENERAL FRAMEWORK FOR ASC
Now that we have seen the range of machine learning and signal processing techniques used in the context of ASC, let us define a framework that allows us to distill a few key operators and components.Computational algorithms for ASC are designed to solve a supervised classification problem where a set of M training recordings {s m } M m=1 is provided and associated with corresponding labels {c m } M m=1 that indicate the category to which each soundscape belongs. Let {γ q } Q q=1 be a set of labels indicating the members of a universe of Q possible categories. Each label c m can assume one of the values in this set, and we define a set Λ q = {m : c m = γ q } that identifies the signals belonging to the q-th class.The system learns statistical models from the different classes during an off-line training phase, and uses them to classify unlabelled recordings s new in the test phase.Firstly, each of the training signals is divided into short frames. Let D be the length of each frame, s n,m ∈ R D indicates the n-th frame of the m-th signal. Typically, D is chosen so that the frames duration is about 50ms depending on the signal's sampling rate. A special case of ASC framework is the so-called bag-of-frames approach  #b0 , named in an analogy with the bag-of-words technique for text classification whereby documents are described by the distribution of their word occurrences. Bag-of-frames techniques follow the general structure shown in Figure   1, but ignore the ordering of the sequence of features when learning statistical models.

Signal
Signal Signal in the signal processing community aimed at promoting reproducible research  #b48 . Similar challenges have been organised in the areas of music information retrieval  #b34 , speech recognition  #b3  and source separation  #b44 .Training T M s ⇤ q s n,⇤ q x n,⇤ q

A. The DCASE dataset
Existing algorithms for ASC have been generally tested on datasets that are not publicly available  #b40 ,  #b18 , making it difficult if not impossible to produce sustainable and reproducible experiments built on previous research. Creative-commons licensed sounds can be accessed for research purposes on freesound.org 2 , a collaborative database that includes environmental sounds along with music, speech and audio effects. However, the different recording conditions and varying quality of the data present in this repository would require a substantial curating effort to identify a set of signals suited for a rigorous and fair evaluation of ASC systems. On the other hand, the adoption of commercially available databases such as the Series 6000 General Sound Effects Library 3 would constitute a barrier to research reproducibility due to their purchase cost.The DCASE challenge dataset  #b21  was especially created to provide researchers with a standardised set of recordings produced in 10 different urban environments. The soundscapes have been recorded in the London area and include: 'bus', 'busy-street', 'office', 'openairmarket', 'park', 'quiet-street', 'restaurant', 'supermarket', 'tube' (underground railway) and 'tubestation'. Two disjoint datasets were constructed from the same group of recordings each containing ten 30s long clips for each scene, totalling 100 recordings.Of these two datasets, one is publicly available and can be used by researchers to train and test their ASC algorithms; the other has been held-back and has been used to evaluate the methods submitted for the challenge.

B. List of submissions
A total of 11 algorithms were proposed for the DCASE challenge on ASC from research institutions worldwide. The respective authors submitted accompanying extended abstracts describing their techniques which can be accessed from the DCASE website 4 . The following table lists the authors and titles of the contributions, and defines acronyms that are used throughout the paper to refer to the algorithms.In addition to the methods submitted for the challenge, we designed a benchmark baseline system that employes MFCCS, GMMS and a maximum likelihood criterion. We have chosen to use these components because they represent standard practices in audio analysis which are not specifically tailored to the ASC problem, and therefore provide an interesting comparison with more sophisticated techniques.   Table I. Arrows indicate sequential processing, for example when statistical parameters learned from features are fed to an SVM to obtain separating hyperplanes. In some cases the decision criterion of SVMS (one versus all, one versus one, or alternative) is not specified in the reference. However, it is always specified when the discriminative learning is performed on frames and an overall classification is determined by a majority vote or a weighted majority vote. Note that for each work cited only the method leading to best classification results have been considered.

Acronym Authors Title


VI. EVALUATION OF ALGORITHMS FOR ASC


A. Experimental design
A system designed for ASC comprises training and test phases. Researchers who participated to the DCASE challenge were provided with a public dataset that includes ground truth labels indicating the environment in which sounds have been recorded. Training, test and optimisation of design parameters can be performed by partitioning this dataset into training and test subsets, a standard practice in machine learning that is further discussed below. To obtain a fair evaluation reflecting the conditions of a realworld application where sounds and labels are unknown to the algorithms, the methods submitted to the DCASE challenge were tested on a private dataset.   Table I for the definition of the algorithms' acronyms. MV is a majority vote classifier which assigns to an audio recording the label that is most commonly returned by the other methods. 'H' indicates the median human accuracy, as obtained through the test described in Section VII, while '  #b29 ' refers to the human accuracy obtained by Krijnders and Holt. Note that the confidence intervals displayed for the algorithmic results are not directly comparable to the variations in human performance, and hence only the median human performance is depicted. See Figure 6 for more details on the distribution of human accuracies.2) Performance metrics: Performance metrics were calculated from each classification obtained using the training and test subsets, yielding 5 results for each algorithm. Let Γ be the set of correctly classified samples. The classification accuracy is defined as the proportion of correctly classified sounds relative to the total number of test samples. The confusion matrix is a Q × Q matrix whose (i, j)-th element indicates the number of elements belonging to the i-th class that have been classified as belonging to the j-th class. In a problem with Q = 10 different classes, chance classification has an accuracy of 0.1 and a perfect classifier as an accuracy of 1. The confusion matrix of a perfect classifier is a diagonal matrix whose (i, i)-th elements correspond to the number of samples belonging to the i-th class.  Table I for the acronyms of the methods). The central dots are the percentage accuracies of each technique calculated by averaging the results obtained from the 5 folds, and the bars are the relative confidence intervals. These intervals are defined by assuming that the accuracy value obtained from each fold is a realisation of a Gaussian process whose expectation is the true value of the overall accuracy (that is, the value that we would be able to measure if we evaluated an infinite number of folds). The total length of each bar is the magnitude of a symmetric confidence interval computed as the product of the 95% quantile of a standard normal distribution q 0.95 N (0,1) ≈ 3.92 and the standard error of the accuracy (that is, the ratio between the standard deviation of the accuracies of the folds and the square root of the number of folds σ/ √ 5). Under the Gaussian assumption, confidence intervals are interpreted as covering with 95% probability the true value of the expectation of the accuracy.

B. Results
From analysing the plot we can observe that the baseline algorithm achieves a mean accuracy of 55%, and a group of other methods obtain a similar result in the range between 55% and 65%. Four algorithms (GSR, RG, LTT and RNH) approach or exceed a mean accuracy of 70%. OE performs relatively close to chance level and significantly worse than all the other methods. The boxes displaying the results of the paired tests explained in Section VI-C indicate that a number of systems performed significantly better than baseline.Finally, the method MV indicated in red refers to a majority vote classifier whose output for each test file is the most common category assigned by all other methods. The mean accuracy obtained with this meta-heuristic out-performs all the other techniques, indicating a certain degree of independence between the classification errors committed by the algorithms. In other words, for almost 80% of soundscapes some algorithms make a correct decision, and the algorithms that make an incorrect classification do not all agree on one particular incorrect label. This allows to combine the decisions into a relatively robust meta-classifier. On the other hand, the performance obtained using MV is still far from perfect, suggesting that a number of acoustic scenes are misclassified by most algorithms. Indeed, this can be confirmed by analysing the confusion matrix of the MV solution. As we can see in Figure 3, the class pairs ('park','quietstreet') and ('tube','tubestation') are commonly misclassified by the majority of the algorithms.To investigate the poor performance of the method OE, we considered the results obtained on the public DCASE dataset, which are not detailed here for the sake of conciseness. OE obtained the highest classification accuracy of all methods, suggesting that it over-fitted the training data by learning models that could not generalise to the test signals.

C. Ranking of algorithms
The ASC performance has been evaluated by computing statistics among different cross-validation folds. However, all the submitted methods have been tested on every file of the same held-back dataset, if the file has been correctly classified and 0 if it has been misclassified. Each X p can be thus interpreted as a realisation of a Bernoulli random process whose average is the mean accuracy of the classifier.Given two classifiers C 1 , C 2 , and the corresponding variables X C1,p ,X C2,p , a third random variable Y p = X C1,p − X C2,p assumes values in the set {−1, 0, +1} and indicates the difference in the correct or incorrect classification of s p by the two classifiers (that is, Y = −1 implies that C 1 has misclassified s and C 2 has correctly classified it; Y = 0 means that the two methods return equivalently correct or incorrect decisions, and Y = 1 implies that C 1 has correctly classified s and C 2 has misclassified it).A sign test  #b22  can be performed to test the hypothesis that the expected value of Y is equal to zero. This is equivalent to performing a paired test evaluating the hypothesis that the performance of the two classifiers C 1 and C 2 is the same. Hence, being able to reject this hypothesis at a fixed probability level provides a method to rank the algorithms.The grey boxes in Figure 2 represent groups of methods whose accuracy is not significantly different and LTT, but outperforms all the remaining methods. Note that we do not include the results of the majority vote meta-heuristic in the ranking, as a paired sign test assumes the variables X C1,p , X C2,p to be statistically independent, and this assumption is violated in the case of MV.

D. Distribution of algorithmic soundscapes classification accuracies
Further analysis of the classification results can be carried out to understand whether there are individual soundscape recordings in the DCASE dataset that are classified more accurately than others. After evaluating each method with a 5-fold cross-validation, every signal s p is classified by all the algorithms, resulting in a total of 12 estimated categories. Figure 4 shows a scatter-plot of the mean classification accuracy obtained for each file, and a histogram of the relative distribution. We can observe that some acoustic scenes belonging to the categories 'bus', 'busy-street', 'quietstreet' and 'tubestation' are never correctly classified (those at 0%). In general, the classification accuracy among soundscapes belonging to the same category greatly varies, with the exception of the classes 'office' and 'restaurant' that might contain distinctive events or sound characteristics resulting in more consistent classification accuracies.

E. Pairwise similarity of algorithms decisions
While the results in Figure 2 demonstrate the overall accuracy achieved by algorithms, they do not show which algorithms tend to make the same decisions as each other. For example, if two algorithms use a very similar method, we would expect them to make a similar pattern of mistakes. We can explore this aspect of the algorithms by comparing their decisions pairwise against one another, and using the number  Results of MDS are shown in Figure 5. We tested multiple dimensionalities and found that 2D (as shown) yielded a sufficiently low stress to be suitably representative. The OE submission is placed in a corner of the plot, at some distance from the other algorithms; that submission achieved low scores on the private testing data. As a whole, the plot does not appear to cluster together methods by feature type, as MFCC and non-MFCC approaches are interspersed, as are SVM and non-SVM approaches.

VII. HUMAN LISTENING TEST
In order to determine a human benchmark for the algorithmic results on ASC, we have designed a crowdsourced online listening test in which participants were asked to classify the public DCASE dataset In designing the listening experiment we chose not to divide the classification into training and test phases because we were interested in evaluating how well humans can recognise the acoustic environments basing their judgement on nothing other than their personal experience. Participants were not presented with labelled training sounds prior to the test, nor were they told their performance during the test.To maximise the number of people taking the test, we have allowed each participant to classify as many acoustic scenes as he or she liked, while randomising the order in which audio samples appeared in the test to ensure that each file had the same probability to be classified. To avoid potential biases, people who were likely to have worked with the data, and thus likely to know the class labels in advance, did not take the test. 

A. Human accuracy
A total of 50 participants took part in the test. Their most common age was between 25 and 34 years old, while the most common listening device employed during the test was "high quality headphones". Special care was taken to remove "test" cases or invalid attempts from the sample. This included participants clearly labelled as "test" in the metadata, and participants who only attempted to label only 1 − 2 soundscapes, and most of whom achieved scores as low as 0% that points to outliers with a clear lack of motivation. Figure 6 shows that the mean accuracy among all participants was 72%, and the distribution of accuracies reveals that most people scored between 60% and 100%, with two outlier whose accuracy was as low as 20%. Since the distribution of accuracies is not symmetric, we show a box plot summarising its statistics instead of reporting confidence intervals for the mean accuracy. The median value of the participants' accuracy was 75%, the first and third quartiles are located at around 60% and 85%, while the 95% of values lie between around 45% and 100%. Note that, although we decided to include the results from all the participants in the study who classified at least a few soundscapes, the most extreme points (corresponding to individuals who obtained accuracies of about 25% and 100% respectively) only include classifications performed on less than 10 acoustic scenes. Removing from the results participants who achieved about 25% accuracy would result in a mean of 74% a lot closer to the median value. In a more controlled listening test, Krijnders and Holt  #b29  engaged 37 participants, with each participant asked to listen to 50 public DCASE soundscapes and select one of the 10 categories. The participants were required to listen for the entire duration of the recordings, and use the same listening device. They obtained a mean accuracy of 79%, which is in the same area as the results of our crowdsourced study (75%).

1) Cumulative accuracy:
During the test, we asked the participants to indicate their age and the device they used to listen to the audio signals, but we did not observe correlation between these variables and the classification accuracy. We did observe a correlation between the number of classified samples and the overall classification accuracy. People who listened to and categorised most or all of the 100 total samples tended to score better than individuals who only classified a few sounds. To assess whether this occurred because participants learned how to better classify the sounds as they progressed in the test, we computed for each individual the cumulative accuracy ρ(t), that is defined as the ratio between the number of correctly classified samples and the total number of classified samples at times t = 1, . . . , P :ρ(t) = |Γ(t)| t .(3)A positive value of the discrete first time derivative of this function ρ (t) = ρ(t) − ρ(t − 1) would indicate that there is an improvement in the cumulative classification accuracy as time progresses. Therefore, wecan study the distribution of ρ (t) to assess the hypothesis that participants have been implicitly training an internal model of the classes as they performed the test. The average of the function ρ (t) calculated for all the participants results to be −0.0028. A right-tailed t-test rejected with 95% probability that the expectation of ρ (t) is greater than zero, and a left-tailed t-test failed to reject with the same probability the expectation is smaller that zero, indicating that participants did not improve their accuracy as they progressed through the test. This is a positive finding, as the listening test was designed to avoid training from the exposure to the soundscapes. Having rejected the learning hypothesis, we are left with a selection bias explanation: we believe that people who classified more sounds were simply better able or more motivated to do the test than individuals who found the questions difficult or tedious and did not perform as well.

B. Scenes class confusion matrix
Further insight about the human classification results can be obtained by analysing the overall confusion matrix of the listening test. Figure 7 shows that 'supermarket' and 'openairmarket' are the most commonly misclassified categories whose samples have been estimated as belonging to various other classes. In addition, there are some common misclassifications between the classes 'park' and 'quietstreet', and (to a minor extent) between the classes 'tube' and 'tubestation'.  To assess if some soundscapes were classified more accurately than others, we conducted a similar analysis for the human performance benchmark to the one described in Section VI-D. Figure   are correctly classified most of the times, with only a few outlier scenes whose classification accuracy is below 30%.

VIII. DISCUSSION
By interpreting sophisticated algorithms in terms of a general framework, we have offered a tutorial that uncovers the most important factors to take into account when tackling a difficult machine learning task such as the classification of soundscapes. Inevitably, every abstraction or generalisation is carried out at the expense of omissions in the description of the implementation details of each method. Nonetheless, we think that valuable insights can be gained by analysing the classification results in light of the framework proposed in Section III.

A. Algorithms from the DCASE challenge
A first trend regarding the choice of statistical learning function S can be inferred by analysing the algorithms submitted for the DCASE challenge summarised in Table II A further observation derived from analysing Table II is that among the methods that used classification trees in combination with a tree bagger or a random forest algorithm, OE achieved a poor classification performance, while LTT reached the second best mean accuracy. This might suggest that meta-algorithms can be a valuable strategy, but may also be prone to over-fitting.Finally, a more exploratory remark regards the general use of the framework described in Section III.Aucoutourier  #b1  studied the performance of a class of algorithms for audio timbre similarity which followed a method similar to the ASC baseline. He reported the existence of a "glass ceiling" as more and more sophisticated algorithms failed to improve the performance obtained using a simple combination of MFCCS and GMMS. To a certain extent, the fact that 7 out of 11 ASC methods did not significantly outperform our baseline might suggest a similar effect, and urges researchers to pursue alternative paradigms. Modelling temporal relationships as described above is one first step in this direction; and perhaps algorithms whose design motivations depart from the ones driving the development of the baseline, such as the normalised compression dissimilarity (OE), might be worth additional investigation.

B. Comparison of human and algorithmic results
When Finally, the comparison of the confusion matrices presented in Figure 3 and Figure 7 reveals that similar pairs of classes ('park' and 'quietstreet', or 'tube' and 'tubestation') are commonly misclassified by both humans and algorithms. Given what we found about the misclassification of single acoustic scene, we do not infer from this observation that the algorithms are using techniques which emulate humanaudition. An alternative interpretation is rather that some groups of classes are inherently more ambiguous than others because they contain similar sound events. Even if both physical and semantic boundaries between environments can be inherently ambiguous, for the purpose of training a classifier the universe of soundscapes classes should be defined to be mutually exclusive and collectively exhaustive. In other words, it should include all the possible categories relevant to an ASC application, while ensuring that every category is as distinct as possible from all the others.

C. Further research
Several themes that have not been considered in this work may be important depending on particular ASC applications, and are suggested here for further research.1) Algorithm complexity: A first issue to be considered is the complexity of algorithms designed to learn and classify acoustic scenes. Given that mobile context-aware services are among the most relevant applications of ASC, particular emphasis should be placed in designing methods that can be run with the limited processing power available to smartphones and tablets. The resources-intensive processing of training signals to learn statistical models for classification can be carried out off-line, but the operators T and G still need to be applied to unlabelled signals and, depending on the application, might need to be simple enough to allow real-time classification results.2) Continuous and user-assisted learning: Instead of assuming a fixed set of categories as done in most publications on ASC, a system might be designed to be progressively trained to recognise different environments. In this case, a user should record soundscape examples that are used to train classification models (either on-line or off-line, using the recording device's own computational resources or uploading and processing the signals with remote cloud resources), and progressively add new categories to the system's memory of soundscapes. Users could also assist the training by confirming or rejecting the category returned from querying each unlabelled signal, and thus refine the statistical models every time a new classification is performed. Such systems would inevitably require more intervention by the user, but would likely result to be more precise and relevant than totally automated systems.3) Hierarchical classification: In this paper we have considered a set of categories whose elements are assumed to be mutually exclusive (that is, a soundscape can be classified as 'bus' or 'park' but not both).Alternatively, a hierarchical classification could be considered where certain categories are subsets or supersets of others. For example, a system might be designed to classify between 'outdoor' and 'indoor' environments, and then to distinguish between different subsets of the two general classes. In this context, different costs could be associated with different types of misclassification errors: for example, algorithms could be trained to be very accurate in discriminating between 'outdoor' and 'indoor', and less precise in distinguishing between an outdoor 'park' and an outdoor 'busy-street'.4) Acoustic scene detection: As a limit case of systems that employes non-uniform misclassification costs, algorithms might be designed to detect a particular environment and group all the other irrelevant categories into an 'others' class. In this case, the system would essentially perform an acoustic scene detection rather than classification. which has already been object of research endeavours  #b25 ,  #b7  is likely to benefit from advances in both areas. Information regarding the events occurring in an acoustic scene could be combined with more traditional frame-based approaches to update the probability of categories as different events are detected. For example, while general spectral properties of a soundscape could be used to infer that a signal was likely to have been recorded in either a 'park' or a 'quiet street', detecting the event 'car horn' would help disambiguate between the two. Furthermore, this Bayesian strategy employed to update the posterior probability of different classes could be used to handle transitions between different environments.

7)
Testing on different datasets: Finally, datasets that contain sounds from different acoustic environments have been recently released. They include the Diverse Environments Multi-channel Acoustic Noise Database (DEMAND)  #b46  and the Database of Annotated Real Environmental Sounds (DARES)  #b47 .

IX. CONCLUSIONS
In this article we have offered a tutorial in ASC with a particular emphasis on computational algorithms designed to perform this task automatically. By introducing a framework for ASC, we have analysed and compared methods proposed in the literature in terms of their modular components. We have then presented the results of the DCASE challenge, which set the state-of-the-art in computational ASC, and compared the results obtained by algorithms with a baseline method and a human benchmark. On one hand, many of the submitted techniques failed to significantly outperform the baseline system, which was designed to be not optimised for this particular task. On the other hand, some methods significantly outperformed the baseline and approached an accuracy comparable to the human benchmark. Nonetheless, a more careful analysis of the human and algorithmic results highlighted that some acoustic scenes were misclassified by all algorithms, while all soundscapes were correctly classified by at least some individuals. This suggests that there is still scope for improvement before algorithms reach and surpass the human ability to make sense of their environment based on the sounds it produces.

X. ACKNOWLEDGMENTS
We would like to thank Dan Ellis, Toumas Virtanen, Jean-Julien Aucouturier, Mathieu Lagrange, ToniHeittola and the anonymous reviewers for having read and commented an early draft of this paper and on our submitted manuscript. Their insights and suggestions have substantially increased the value of this work. We also would like to thank the IEEE AASP Technical Committee for their support in the organisation of the DCASE challenge.statistical normalisation is performed as a standard feature processing aimed at avoiding offsets or scaling variations of any of the coefficients within feature vectors. This is accomplished by subtracting the global mean (computed from features extracted from the whole dataset) from each vector x n,m , and by dividing each coefficient by the their global standard deviation. After the feature vectors have been normalised, the average and standard deviation of the coefficients x n,m,k are 0 and 1 respectively.

B. GMMs
Gaussian mixture models (GMMS) have been introduced in Section II-C, and are used to infer global statistical properties of the features from local features vectors, which are interpreted as realisations of a generative stochastic process. Let N (µ, Σ) be a multivariate normal distribution with mean µ ∈ R K and covariance matrix Σ ∈ R K×K , and recall that the notation x n,Λq identifies features vectors extracted from training signals that belong to the q-th category. Then every such vector is modelled as generated by the following distribution:x n,Λq ∼ I i=1 w i N (µ i , Σ i )(4)where I is a fixed number of components, and w i is a latent variable expressing the probability that a particular observation is generated from the i-th component.The operator S takes the collection of features x n,Λq and learns a global model for the q-th class M q = {w i , µ i , Σ i } I i=1 by estimating the parameters of the Gaussian mixture distribution in Equation (4), which can be accomplished through an expectation-maximisation (EM) algorithm  #b5 . The only parameter to be set in this case is the number of Gaussian components I which rules a tradeoff between model accuracy and over-fitting. Indeed S I must include a sufficient number of components to account for the fact that different events within a soundscape generate sounds with different spectral properties. However, as the number of components becomes too large, the model tends to fit spurious random variations in the training data, hindering the generalisation capabilities of the algorithm when confronted with an unlabelled sound.

C. Maximum likelihood criterion
Once the GMMS M q have been learned from the training data, features can be extracted from an unlabelled sound by applying the operator T . The new sequence of features x n,new is statistically normalised using the same mean and standard deviation values obtained from the training signals, and a likelihood measure G is employed to evaluate which class is statistically most likely to generate the observed features, hence determining the sound classification. A set of coefficients g q is computed by evaluating the log-likelihood of the observed data given the model:g q = p(x n,new |M q ) ∝ I i=1 w i (x n,new − µ i ) T Σ i (x n,new − µ i )(5)and a category is picked based on the most likely model c new = arg min q g q .Note that the baseline system described in this section is an example of a bag-of-frames technique where the ordering of the sequence of features is irrelevant. Indeed, any random permutation of the sequences x n,Λq does not affect the computation of the GMM parameters, and thus the classification of unlabelled signals.

Footnote
2 : http://freesound.orgNovember 17, 2014   DRAFT
3 : http://www.sound-ideas.com/sound-effects/series-6000-sound-effects-library.html 
5 : The original LTT submission achieved low accuracy due to a bug in a Matlab toolbox -here we are presenting the results obtained with the correct implementation.November 17, 2014   DRAFT
4 :  DRAFT