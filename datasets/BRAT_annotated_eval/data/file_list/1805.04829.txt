Spatial Uncertainty Sampling for End to End Control

Abstract
End-to-end trained neural networks (NNs) are a compelling approach to autonomous vehicle control because of their ability to learn complex tasks without manual engineering of rule-based decisions. However, challenging road conditions, ambiguous navigation situations, and safety considerations require reliable uncertainty estimation for the eventual adoption of full-scale autonomous vehicles. Bayesian deep learning approaches provide a way to estimate uncertainty by approximating the posterior distribution of weights given a set of training data. Dropout training in deep NNs approximates Bayesian inference in a deep Gaussian process and can thus be used to estimate model uncertainty. In this paper, we propose a Bayesian NN for end-to-end control that estimates uncertainty by exploiting feature map correlation during training. This approach achieves improved model fits, as well as tighter uncertainty estimates, than traditional element-wise dropout. We evaluate our algorithms on a challenging dataset collected over many different road types, times of day, and weather conditions, and demonstrate how uncertainties can be used in conjunction with a human controller in a parallel autonomous setting.

Introduction
End-to-end deep learning methods have yielded promising results in autonomous lane following  #b0  and full end-to-end driving  #b1  #b2 . Steering control outputs (Y) can be directly learned from raw sensor data (X) by finding a mapping f parameterized by weights W which minimizes some objective error. While powerful, these deep NNs are trained end-to-end as black boxes, and as such, lack a definitive measure of associated confidence with the output. Integration of these models into deployable or shared control frameworks necessitates a method for determining predictive uncertainty.Bayesian neural networks aim to learn a posterior distribution over the weights, P (W|X, Y), and thus provide a grounded mathematical framework for determining model uncertainty. In practice, it is computationally infeasible to directly learn this posterior, P (W|X) from vast, and often noisy, observational data. Thus, variational inference (VI) methods have been used to obtain an approximation for the posterior to estimate model certainty. However, VI methods can also suffer from prohibitive computational cost  #b3  #b4  #b5  #b6 . Dropout sampling has emerged as an accurate, computationally efficient way to estimate model uncertainty. Applying dropout before every weight layer in a NN approximates a deep Gaussian process, since a dropout NN model minimizes the Kullback-Liebler divergence between the approximated posterior and the true posterior, P (W|X, Y)  #b7  #b8 . Thus, dropout sampling provides an estimation of the predictive variance. Dropout, initially developed to avoid overfitting during training, places independent identically distributed Bernoulli random variables over every neuron to either "drop" or "keep" with some probability  #b9 . This approach is problematic when individual learned feature maps exhibit strong correlation, such as in the preliminary network layers for computer vision applications. Spatial dropout overcomes this limitation and achieves uncertainty estimates while also promoting independence between convolutional feature maps  #b10  #b11 .Here, we address the need for reliable uncertainty estimation in end to end learning systems for autonomous vehicles. The contributions of this paper can be summarized as follows: (1) Demonstration of accurate uncertainty estimation utilizing 2D spatial dropout; (2) A deep Bayesian network for end-to-end autonomous vehicle control; and (3) A shared control framework which incorporates uncertainty estimates, thus enabling shared human-machine interaction.

Related Work
The idea of using Bayesian integration over neural network parameters  #b12  #b13  and of averaging over the prior Gaussian weight distributions to estimate uncertainty of the output  #b14  #b15  #b16  have been widely explored. Recently, due to increase in training data sizes, more computationally tractable approaches have emerged. Specifically, it was shown that dropout  #b9  can be used to estimate uncertainty by sampling the approximate underlying Gaussian process  #b7  #b17 . The effect of different dropout distributions (Bernoulli, Gaussian, and Spike-Slab)  #b18 , convolution specific dropout techniques  #b10 , as well as the impact of model versus data uncertainty  #b19  has also been explored.This notion of stochastically sampling from Bayesian NNs to achieve uncertainty estimates has been applied to disease detection  #b20 , reinforcement policy learning  #b7 , as well as scene segmentation  #b21  and depth estimation  #b19  for autonomous vehicles. Bayesian uncertainty has not previously been applied to the more challenging autonomous actuation aspect of end-to-end control  #b1  #b2 , and it has not yet been shown how uncertainty can be incorporated into a parallel autonomy system  #b22  where human and robot (i.e., vehicle steering system) share control. Our approach addresses these limitations by using spatial dropout  #b10  to estimate uncertainty while also promoting independence between feature maps during training of our end-to-end driving network.

Methodology
We implement two dropout based approaches for estimating model uncertainty in a Bayesian NN for end-to-end autonomous vehicle control. It can be shown that applying dropout before every weight layer is equivalent to approximating a probabilistic deep Gaussian process  #b7 . From the Dropout-based approximation of the posterior q(W), we obtain a predictive distribution q(Y|X) = P (Y|X, W)q(W)dW. Given T stochastic forward passes through the network using dropout, {W t } T t=1 , we define the predictive mean as:E[Y|X] = 1T T t=0 f (X, W t ) and define the model uncertainty (e.g., predictive variance) as Var[Y|X] = 1 T T t=0 f (X, W t ) 2 − E[Y|X] 2 .In this paper, we use two methods for the aforementioned stochastic sampling: (1) element-wise Bernoulli dropout  #b9  and (2) spatial Bernoulli dropout  #b11 , illustrated in Figure 1A. In the second approach, uncertainty estimates result from sampling a Bernoulli random variable Z to drop entire Evaluation of the predictive mean (center) and predictive variance (right top) against the ground truth control, X.The underlying data distribution P (X) is also illustrated on the bottom right. Note that, as expected, uncertainty (variance) increases as the amount of data decreases.feature maps: z (k,l) ∼ Bernoulli(p) corresponds to k-th feature map in the l-th layer, where p is the probability that all units in the feature map remain active  #b10 . Equivalently, this can be thought of as a special case of element-wise dropout, further supporting the notion that the sample variance from T stochastic passes of spatial dropout provides a valid way to estimate the uncertainty. Specifically, we consider each neuron in a feature map to be drawn from a Bernoulli distribution z (i,k,l) ∼ Bernoulli(p), corresponding to the i-th neuron in the k-th feature map from the l-th layer. Then, spatial dropout precisely corresponds to the instance where z (i,k,l) = z (j,k,l) ∀(i, j) pairs across feature maps in convolutional layers. Because we can think of spatial dropout as a special instance of element wise dropout with an additional constraint, it follows that spatial dropout provides a valid way to estimate the model uncertainty. We implemented both approaches and compared the resulting loss optimization and uncertainty estimates.We tested the efficacy of spatial dropout sampling of deep Bayesian networks applied to the complex task of end-to-end driving ( Figure 1B). The vehicle base platform used for this study is a Toyota Prius 2015 V, which we retrofitted with sensors, power, and computing systems for parallel and autonomous driving. We collected an extensive dataset with over 7 hours and 500GB of driving data across a range of road and weather conditions to train our models. All models were trained on the NVIDIA DGX-1 supercomputer and were able to run in real-time on the car's NVIDIA Drive PX2.Our network takes as input a single image frame from a front facing video camera and performs feature extraction with 5 convolution layers with 5 × 5 kernels and alternating (2 × 2, 1 × 1) strides. The resulting features are then fed into 4 fully connected layers which perform dimensionality reduction until we get a single output unit at the last layer. Dropout is performed after every layer with p = {0.9, 0.5}, where p corresponds to the probability of being kept, for convolutional and fully connected layers, respectively. The network was trained end-to-end to optimize MSE of the inverse-turning radius of the vehicle (monotonic in steering wheel command).

Experiments and Results
In this section, we outline the uncertainty experiments performed during this study and introduce a novel control strategy to incorporate uncertainty estimates in a shared autonomous controller. We observed that utilizing spatial dropout during training lead to faster convergence compared to element wise dropout (Figure 2 left). After training the model, we were evaluated the predictive mean of new data as E(Y|X) (center). The shades of blue represent half standard deviations from the mean and we observe a greater variance as we are given data farther from the origin. Specifically, this corresponds to having more variance in the predictive mean when given roads with tighter turns, as opposed to on relatively straight roads. Finally, we evaluate the predictive uncertainty, Var(Y|X) (right top), again as a function of the data. Note, that we observe a similar trend where uncertainty rises as the data moves farther from the origin (increased turns). As expected, we also observe that less data is available from these situations as well (right bottom) supporting a general trend where model uncertainty increases as the amount of data used during training decreases.We also found that the mean uncertainty error, y−E(Y|X) Var(Y|X) , which penalizes estimators with high error and low uncertainty, for spatial dropout (1.74) was less than that obtained from element-wise dropout (2.67). Furthermore, we use these uncertainty estimates to develop a shared controller which fuses the human's actions with the network's output according to the uncertainty. In other words, we formulate a parallel autonomy control strategy u P A = (1 − σ) · u N + σ · u H where u P A , u H , u N correspond to parallel autonomy, human, and network control commands for σ = κVar(Y|X), with κ being a tunable threshold parameter that depends on the drop probability.

Conclusion
In this paper, we present a novel way to utilize spatial dropout to stochastically sample and compute uncertainty estimates of an end-to-end autonomous vehicle control system. We demonstrate how our estimates allow us to understand the limitations of our model when performing inference and thus provide a tunable framework which fuses model and human control. We are currently working to extend this work to not only estimate the posterior over a single control output but instead over a full parametric Gaussian Mixture Model (GMM) across all possible control outputs. In doing so, we will estimate the uncertainty associated to each of the individual GMM parameters and gain an even richer understanding of our model's confidence.