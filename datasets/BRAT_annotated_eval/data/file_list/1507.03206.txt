Dynamic Topological Mapping with Biobotic Swarms *

Abstract
In this paper, we present an approach for dynamic exploration and mapping of unknown environments using a swarm of biobotic sensing agents, with a stochastic natural motion model and a leading agent (e.g., an unmanned aerial vehicle). The proposed robust mapping technique constructs a topological map of the environment using only encounter information from the swarm. A sliding window strategy is adopted in conjunction with a topological mapping strategy based on local interactions among the swarm in a coordinate-free fashion to obtain local maps of the environment. These maps are then merged into a global topological map which can be visualized using a graphical representation that integrates geometric as well as topological feature of the environment. Localized robust topological features are extracted using tools from topological data analysis. Simulation results have been presented to illustrate and verify the correctness of our dynamic mapping algorithm.

Introduction
Sensor networks with their broad application in mapping and navigation  #b1 , habitat monitoring  #b2 , exploration, and search and rescue  #b3 , have attracted a lot of attention in recent decades. Mobile sensor networks offer the flexibility to adapt with dynamic environments. In some applications, however, the amount of information that could be sensed or transferred by the agents is limited. This motivates the design of distributed systems composed of simple agents with minimal sensing requirements  #b4 .As a motivating example, imagine a scenario in which an earthquake has left several individuals trapped under the ruins of collapsed buildings. Sending teams of human rescuers to search and extract survivors may put the rescuers and the survivors in danger. Instead, we can choose to send multiple autonomous robotic agents to accomplish this search and rescue operation  #b5 . Since large robots may not be able to explore all desired locations due to size and safety limitations, a team of small autonomous agents can be considered (e.g., biobotic insects  #b0  #b6  or biologically inspired milli-robots  #b7 ; see Fig. 1 for illustration). The first requirement for such system would be to explore and build a map of the environment and then localize anyone in need of assistance. This is but one scenario in which a swarm of small robotic agents can be used in unstructured emergency-response situations for mapping and source-localization purposes. The mapping task in such situations becomes extremely challenging due to hardware limitations and the unstructured nature of the environment. Power and computational resource constraints prohibit us from using continuous control schemes for the agent's locomotion and from using onboard imaging techniques for their localization. Furthermore, since some locations can be indoor or even underground in cluttered environments, signal propagation based localization (e.g., GPS, or computing signal strength or time of flight) may be unreliable, and odometry information might include a high amount of uncertainty due to irregular conditions of the terrain. Therefore, traditional mapping and exploration techniques such as SLAM  #b8  would not perform well under these adverse conditions.Since obtaining an accurate metric map of the environment may not be possible in these scenarios, we are interested to construct topological maps of unknown environments using biobotic mobile sensor networks under the constraint of limited sensing information. Our approach to mapping in such scenarios is to extract a sketch of the environment instead of a fully-detailed map. This sketch is composed of robust topological information that is obtained from a minimal amount of sensing. Instead of providing continuous control feedback to the agents, we explore how stochastic motion models and weak encounter information can be exploited for mapping. These strategies for motion and sensing accommodate for the hardware limitations of the platforms under consideration. We employ tools from algebraic topology to extract spatial information of the environment based on neighbor to neighbor interactions among the agents with no need for localization data. This information is used to build a map of persistent topological features of the environment, which will contain only robust features.In this paper, we extend the approach introduced in  #b9  #b10 , where a notion of encounter metric is built upon encounters among the agents, and uses topological data analysis (TDA)  #b11  to extract features such as connected components and holes in the environment. This metric was improved in  #b10  to obtain a more accurate point cloud representation of the unknown environment, by using a density based subsampling procedure as well as a classification technique to provide a robust quantitative representation of features in the point cloud data. Although the aforementioned approach works quite well in simple scenarios, its performance in accurately classifying features degrades for more complex environments, with growing number or size of persistent features in the environment  #b10 . Additionally, the complexity of the algorithm grows quadratically with respect to the number of observations required to properly estimate a map of the scene. This makes the procedure computationally too expensive for larger and more complex environments. Therefore, in this paper, to avoid increasing the computation cost and to obtain more accurate and robust maps for larger environments with more complex features, we propose a dynamic exploration and mapping strategy by addition of a leading agent (see Fig. 1 and 2). This approach can be described as a two level procedure: Globally, at a higher level, the aerial agent performs a dynamic sweeping coverage of the area of interest by leading the center of the swarm to move towards a desired direction. Locally, the swarm of boibotic agents explore their assigned coverage domain. Information gathered over smaller time windows are exploited to build local maps of the domains covered and then merged into a global map (Fig. 2).The remainder of the paper is organized as follows: Section 2 overviews the related work to this study. A concise background on the tools from topological data analysis used in this work is provided in section 3; section 4 describes the problem under study, including mobility and sensing characteristics of the ground biobotic agents as well as the leading agent; in section 5 we present our methodology for dynamic exploration and topological mapping with minimal sensing information; section 6 validates our approach using numerical simulations; finally, conclusions and future work are discussed in section 7.

Related Work
The standard localization and mapping techniques, originated in the SLAM algorithm  #b8 , estimate the position of moving agents based on a set of observations from landmarks in the environment as well as sensing information from the moving agents (e.g. odometry, IMU, or vision) to estimate the agents' motion  #b12 . As an example, a lot of recent studies on localization and mapping, has focused on visual or RGB-D SLAM  #b13  #b14 . The primary assumption in these approaches is, however, that the exploring agents are equipped with advanced sensing devices such as depth sensors or camera. In our problem, on the other hand, we consider a case where such sensing information is unavailable (e.g. biobotic or micro-robots), which will result in the failure of standard methods.Methods from computational topology, on the other hand, can provide tools to extract topological features from data sets without requiring coordinate information. This makes them more suitable for scenarios in which weak or no localization is provided. Topological frameworks, which apply tools from algebraic topology, have been recently used for a variety of applications including sensor networks and robotics. Particularly, these methods have been used for applications such as coverage and hole detection in sensor networks  #b15  #b16  #b17  #b18  #b19 , motion planning  #b20 , localization  #b21  #b22  #b23 , and camera network coverage  #b24 .Walker  #b25  employed persistent homology to compute topological invariants from encounter data of the mobile nodes in Mobile Ad-Hoc networks in order to infer global information regarding the topology of a physical environment, but the nodes are assumed to follow a simple mobility model on a graph. A topological version of localization via signals of opportunity has been studied in  #b23 . However, this approach is mostly focused on localization problem although it could also detect coarse features of the environment in the context of mapping. Furthermore, it requires the existence of transmitters in the environment that provide such signals of opportunity. Topological localization and mapping has been also considered lately in  #b21  and  #b22 . Although these are akin in the context of using topology for representation of physical structures in the environment with mobile agents, they differ with our work in the sense that they assume the existence of an IMU or a motion model for prediction of the agents' states, as well as fixed landmarks on the boundaries of structures (e.g. buildings) to be used for observation. In this paper, however, the mapping is intended to be performed using local encounters among the agents and not relying on external resources (signals of opportunity or fixed landmarks), as they might get out of order as a result of disaster scenario conditions, nor on odometry information.In  #b16  #b26 , topological characterization of coverage and hole detection in sensor networks using only proximity information of the nodes within a neighborhood was examined. However, these studies focused on stationary networks, and mainly concerned about the coverage holes in the sensing domain of the network rather than the characterization of the physical environment itself.There exists also a notion of topological SLAM in the literature (e.g.  #b27  #b28 ), which differs from our work in the sense that the context of topology has been considered as a combinatorial representation of the free space of the environment.

Background


Toppological Data Analysis
A brief introduction of some of the basic concepts in computational topology and persistent homology used for data analysis in this paper is presented here. A comprehensive review of the topic can be found in  #b29 .Topological data analysis (TDA), introduced in  #b11 , is a new field of study which employs tools from persistent homology theory  #b30  to obtain a qualitative description of the topological attributes and visualization of data sets sampled from high dimensional point clouds.A point cloud can be thought of as finite samples taken from a density map which may include noise. TDA represents the prominence of features in the point cloud in terms of a compact representation of the multi-scale topological structure called persistence diagrams  #b29 . It reduces the dimensions of data by construction of a filtration of combinatorial objects, which can represent geometrical and topological features of the data set at specific scales, and the nodes at this complex can be considered as corresponding clusters in the data.One of the well-known techniques widely used in topological data analysis is persistent homology, which deals with the way that objects are connected. Topological structures of a space M are summarized as a compact representation in the form of so-called Betti numbers, which are ranks of topological invariants, called homology groups. The n-th Betti number, β n measures the number of n-dimensional cycles in the space (e.g. β 0 is the number of connected components and β 1 is the number of holes in the complex). The space M usually is not directly accessible but a sampled version of it, X, can be used for computations. This sample is represented as a point cloud, a finite set of points equipped with a metric, which can be defined by pairwise distances between the points (distance function). The distance function can be defined based on the coordinates of the points in their embedding manifold, or can be constructed by specifying pairwise distances between points independently from their (possibly unknown) coordinates.A standard method to analyze the topological structure of a point cloud is to map it into combinatorial objects called simplicial complexes. One way to build these complexes is to select a scale , place balls of radius on each vertex, and construct simplices based on their pairwise distance relative to . A computationally efficient complex, called the Vietoris-Rips complex  #b31 , consists of simplices for which the distances between each pair of its vertices are at most . A sequence of complexes, called a filtration X( ), then can be obtained by increasing over a range of interest, with the property that if t < s then X(t) ⊂ X(s). Persistent homology, computes the values for which the classes of topological features appear (b i n ) and disappear (d i n ) during filtration, referred to as the birth and death values of the i-th class of features in dimension n. This information is encoded into persistence intervals [b i n , d i n ] or as a multiset of points (b i n , d i n ), called a persistence diagram, dgm n (X). Algorithms for computation of persistent homology can be found in  #b11  #b32 .An example of a topological space M together with sampled data X and corresponding filtration over is shown in Fig. 3. The persistent diagram infers the existence of one connected component and one persistent hole.

Problem Statement
Consider a collection of mobile sensing agents moving stochastically on a bounded domain of interest A ⊂ R 2 . Each ground agent is distinguished by its unique ID, and its motion dynamics in the bounded space mimic the movements of a biobotic insect. In addition to the swarm of ground agents, there exists a leading agent (e.g. a quad-copter or a biobotic moth), which plays the role of a swarm leader in order to herd the ground agents to explore all parts of the desired environment over time. It serves as an access point to establish a local network for communication with the swarm in order to send control commands and receive required information (Fig. 2).The ground agents are provided with weak localization information, i.e. neighboring agent identification within a specific range are the only information used, and no coordinate information or other information is provided to them. For example, odometry and inertial measurements are considered to be too unreliable due to the uneven and unstructured terrains present in our application scenario. However, they can communicate wirelessly to the leading agent within its limited communication range. Alternatively, due to weak transmitters on the ground agents, we could just consider a one-way communication from the aerial agent to the swarm.Given this minimal sensing scenario, we aim to build a sketch of the unknown scene, which includes information about topological and geometrical features of the environment A. We refer to such sketch as the topological map. Fig. 4 illustrates the idea of such topological mapping for a square shaped physical environment including two obstacles. Our description incorporates a point cloud representation obtained from local interactions between agents ( Fig. 4(b)), a list of robust features captured by topological persistence diagrams (Fig. 4(c)), and a physical sketch of the environment ( Fig. 4(d)).The previous example demonstrates the approach proposed by the authors in  #b10 , in which stochastic agents completely explore a bounded domain in order to construct a topological map. These results will be the building blocks for the approach proposed in this paper, in which an external agent is used to lead the swarm in order to allow for mapping and exploration of large and more complex environments. We assume the existence of a leading agent (e.g., an aerial vehicle) which sweeps the entire domain. The stochastic agents are assumed to stay within a region D(t) ⊂ A centered around the leading agent. As the swarm of agents travel through the environment, a dynamic map of the scene is built by having the agents share information about their interactions. In order to provide enough encounters between agents to be gathered, the leading agent must travel at an appropriate speed. Furthermore, we require that the dynamic coverage of the stochastic swarm to cover the domain of interest. That is,A ⊂ ∪ t∈[0,T ] D(t),(1)where [0, T ] is the observation time interval.

Motion Model of the Biobotic Swarm
The mobility model of the ground mobile sensors is adopted from the probabilistic movement model of cockroaches, described in  #b33  ,which can be mainly described by their individual and group behaviors. The individual behavior of cockroaches can be described mainly by two behaviors, namely diffusive random walk (RW) and wall following (WF). In this paper, for the sake of simplicity, we skip the group behavior and wall following and only consider agents who stochastically move according to the RW model. This is consistent with the behavior of cockroaches  #b33 , which can be exploited as a natural mode of operation for biobotic systems  #b0 .The random walk is modeled as piecewise linear movements with fixed orientation, interrupted by isotropic changes in direction, and constant average velocity of v m . The length of the line seg- ments are selected randomly from an exponential distribution with characteristic length λ. Changes in direction are also triggered by collision detection with other agents or obstacles in the scene. Moreover, it is known that during their RW motion, the agents probabilistically stop for some period of time and then continue their movement  #b33 . The biobotic insects are equipped with a controlled motion mode aside with their natural motion mode. In the controlled motion mode, the insects are capable of being controlled wirelessly to perform left and right turns or to be commanded to start or stop their motion. Consistent with this controlled mode, we assume that, aside from random walk, the agents can be in a static mode of operation in which they do not move but sensing and communication are still possible. The only control that we assume on their motion is switching between static and random walk modes.Note that the average velocity of the swarm is determined by the average velocity of the flying leader,ū. In order for the biobots to fully explore and sample the current coverage domain of the leader with high enough density, the average velocity of the random walk motion of the swarm agents needs to be high enough compared to the swarm velocity.

Sensing and Communication
The sensing and communication model for the agents is inspired by limited sensing capabilities of the biobotic insects, which incorporate a wireless transmitter and receiver provided by a systemon-chip based ZigBee enabled wireless backpack system inserted into their bodies  #b0 . Each agent is distinguished by its unique ID, and assumed to have a limited sensing capability, with a detection radius r d , which defines the region in which it can identify and communicate with other agents. It is assumed that the swarm can only detect signal strength from the leading agent, which can be used to maintain the agents within a bounded domain D(t) centered around the leading agent at Moreover, each agent can detect the presence of an obstacle and avoid collision by changing direction within its collision detection region. The agents are able to record their encounters with each other in accordance with the corresponding times as encounter events. These encounters are in fact the main piece of information in our approach in the construction of a metric on the samples of the physical space for the purpose of mapping. An encounter event takes place between two agents if their corresponding center positions fall within a distance of r d . An encounter E i can be recorded by an agent as a tuple:E i = [t 0i , t 1i , ID 1 i , ID 2 i ],(2)where [t 0i , t 1i ] denotes the time interval of the encounter, and ID 1 i and ID 2 i represent the IDs of the two encountering agents. We define T (E i ) = [t 0i , t 1i ] as the i-th event time interval, and ID(E i ) = {ID 1 i , ID 2 i } as its ID set . At each time step, we consider a subset of agents in the corresponding coverage domain D(t) to be in the static mode, and denote by S(t) the set of static nodes at time t. Furthermore, the nodes are able to report their status as being in a random walk or static state.

Dynamic Topological Mapping
As described in the introduction, our objective is to construct a map of the environment in scenarios with no reliable odometry, signal strength or visual features (due to an unstructured and harsh terrain), and with limiting power constraints. For this reason, we rely only on a minimal sensing strategy that makes use of encounter information between stochastic agents (i.e., keeping track of interactions between agents that are in close proximity of each other).In this section, we represent our methodology to extract topological and geometrical features from unknown environments. An overview of the approach is shown in Fig. 5. The basic methodology makes use of the topological mapping approached introduced by the authors in  #b9  as a building block. As the leading agent sweeps the environment, observations over a set of windows of time are used to construct local topological maps. Information from observations in the intersection of these windows are used to determine connections between these maps in order to stitch them together and build a global topological map.We define ∆t as the total amount of overlap between two time windows. This overlap needs to be sufficient in order to guarantee that enough static points and encounter events are found there to be able to properly stitch the topological maps (see section 5.2 for more details). The time windows from which observations will be used for the local mapping are defined asW i = [t i−1 − ∆t/2, t i + ∆t/2], i = 1, . . . , N,(3)where {t i } are evenly spaced, N is the total number of windows, and i W i = [0, T ] (see figure 2 for an illustration). As mentioned before, D(t) is the domain of interest around the leading agent located at x(t) in which the ground agents will be exploring the domain (e.g., D(t) can be a disk of radius r centered at x(t)). Hence, we can define the i-th domain for local mapping asD i = t∈W i D(t),(4)which is the region in the space to be mapped locally. In order to guaranteed full coverage of the environment A, we must have A ⊂ i D i .

Local Mapping
This task is accomplished by following the methodology introduced in  #b10 . The ground agents perform the exploration and mapping by simultaneous random dispersion and leader following. In order to create fixed landmarks in the environment, a subset of agents are selected as static. The process is executed by: (1) recording encounter events between agents, (2) constructing a metric based on these events, and (3) extracting robust topological features.

Exploration and Event Collection
The exploration initiates with a dispersion stage, where all nodes start their motion from an arbitrary initial configuration in a moving status until dispersed throughout the environment, while maintaining their connectivity with the aerial access point. This is followed by a landmark selection stage, in which a small percentage of the nodes are selected as static landmarks by modifying a standard MaxMin landmark selection approach  #b34 . Given the adjacency graph due to the communication range, we use its hop distance to select landmarks iteratively by maximizing its distance from the previous set of landmarks. The first agent is selected randomly. If the graph is not connected we assume that landmark agents are selected randomly from each cluster with probability equal to the percentage of agents in each cluster. We have shown in  #b35  that incorporating a small percentage of static nodes in the network, as landmarks will improve our point cloud estimation of the environment to a great extent. Once the static landmarks are selected, the rest of the agents continue their random walk motion and record their encounters with other agents.In order to incorporate the necessary aspects of leader following, we require the ground agents to remain within D(t) for all times. We assume that the agents are capable of detecting when they leave this domain of interest, and can change their random walk strategy in order to estimate a local signal strength gradient and move in that direction. Static agents that leave D(t) would immediately switch to random walk behavior, and new landmark agents would be selected. Our method is robust in the sense that it tolerates having some agents getting separated from the swarm.

Geometric Reconstruction
As our approach is a coordinate free procedure, we need to first build an estimated metric to represent the map of the local region as a point cloud. Our metric, which we refer to as the encounter metric, is constructed based on a set of encounter events among the agents.To build a distance metric on the set of encounter events, we construct an undirected weighted graph G with vertices corresponding to the events E i , denoted as the encounter graph. For any two vertices E i and E j , we include an edge e ij with weightw ij = inf {|t 1 − t 2 | : t 1 ∈ T (E i ) , t 2 ∈ T (E j ))} (5) if ID(E i ) ∩ ID(E j ) = ∅.We can furthermore improve our graphical model by incorporating the fact that landmark nodes are static. Let S be the set of indices of all agents who has been static for some time period. For each s ∈ S letT (s) = {T 1 (s), T 2 (s), ...}(6)denote the set of all time intervals T i (s) = [t i,b s , t i,d s ] for which agent s has been in a static mode. Then, two events E i and E j withID(E i ) ∩ ID(E j ) = s ∈ S(7)had to occur geometrically at nearby locations if∃k, s.t. T (E i ) ∩ T (E j ) ∩ T k (s) = ∅.(8)Therefore, the corresponding weight w ij is set to 0 in this case. Note that the elements of the graph G, represent estimations of pairwise distances between encounter events, i.e. G(i, j) =d E (E i , E j ). To proceed with the geometric point cloud reconstruction, we follow the Isometric mapping (Isomap) technique  #b36  in manifold learning  #b37 . The main idea is to estimate Geodesic distances on a manifold by the shortest path distance on the neighborhood graph of the samples taken from the manifold. Therefore, we build our encounter metric on G, denoted by D G , as[D G ] i,j = d G (E i , E j ) where d G (E i , E j )represents the length of the shortest path between nodes E i , E j in G, which can be obtained from Dijkstra's or Floyd's shortest path algorithms  #b38 . Finally, we apply classical Multidimensional Scaling (MDS)  #b39  to the matrix D G in order to find an embedding of the point cloud data in 3-dimensional Euclidean space.

Topological Feature Extraction
The set of encounter nodes together with the corresponding estimated metric defines a point cloud, the encounter point cloud, which is processed to construct a filtration of simplicial complexes, denoted as encounter complexes. This filtration is obtained by computing the Vietoris-Rips complexes  #b31  from the encounters as a function of the distance parameter (as defined in section 3). The construction of the encounter complex is done in a computationally efficient and robust way by incorporating strategies as described in  #b10  #b35 .We use the tools introduced in section 3 in order to extract persistence diagrams from a filtration of the subsampled set of points. The filtration is based on computing the Rips complexes  #b31  and we use the Dionysus C++ library  #b40  for computation of persistent homology. The diagrams capture the persistence and robustness of topological features in the environment. We restrict our computations to the dimensions 0 and 1 of persistence as the higher dimension are not applicable in our experiments. Robust classification of topological features in the environment is performed by using statistical learning techniques as described in  #b10 .

Global Mapping
So far we have constructed a set individual local maps {M i } for the covered domains {D i }. The objective of this section is to provide a methodology for gluing these maps together to obtain a global one, M for the area of interest A. Figure 5 illustrates our proposed approach. The idea is to use common static nodes between different map components to define a connectivity measure and connect them based on the defined measure. To preserve topological features that cannot be described on a single local map (e.g. a very long building that will not fit within one window), we construct point clouds on the intersection of the consecutive map components (M i and M i+1 ) and perform a clustering analysis to robustly identify the number of connections between the different map components.We define the subset of static nodes joining M i to M i+1 as:S i,i+1 = {s ∈ S : ∃k s.t. t k,b s ≤ t i − ∆t and t k,d s ≥ t i + ∆t}.(9)This is the set of static nodes whose appearance time precede the starting time of W i+1 and their disappearance time is later than the end time of W i . Furthermore, we define the set of encounter associated with these static nodes asE S i,i+1 = {E i : ID(E i ) ∩ S i,i+1 = ∅}.(10)An encounter metric is constructed on the set E S i,i+1 to approximate a metric on the set S i,i+1 . We consider a point cloud, consisting of the set E S i,i+1 together with the k-nearest neighbors of each of its elements as a connecting point cloud between the maps M i and M i+1 . We refer to this point cloud as the inter-domain point cloud and the equivalent metric as the correspondence metric between two local maps M i and M i+1 . Note that S i,i+1 correspond to connections between the two maps, but some of these connections may correspond to the same connected component within the domains D i and D i+1 . In order to identify which connections are equivalent, we perform a clustering analysis by using the encounter metric constructed on the set E S i,i+1 .As we do not know the number of clusters a priory, we employ the single linkage clustering as one of the most famous agglomerative hierarchical clustering techniques  #b41 . Hierarchical techniques provide a similarity dendrogram which can be used to classify data into clusters by applying a cut-off threshold c on the similarity values. This cut-off is selected experimentally.

Simulation Results
In this section, we present the simulation results for the verification of our dynamic topological mapping approach. We consider basic geometries in our analysis in order to provide the building blocks for a structured mapping of more complex environments. In our simulations, we consider three different scenarios which differ in the physical layout of the area of the interest, as shown in the first rows of the Figures 6 -8. The idea behind these scenarios is to verify the successful implementation of the proposed approach when there are large features (e.g. long structured obstacles) that cannot fit within a local coverage domain, like the one in Fig. 7, or scenarios like in Fig. 8, in which although the individual features are not too big, but need to be recognized and merged properly.The aerial leader is considered to move with a constant linear velocity of v x = 0.005 m/s in the x−direction, while the average velocity of the ground agents in their random walk model is considered to be v m = 0.1m/s. The coverage window of the aerial vehicle, for simplicity, is considered to be a rectangular arena with the length of l = 3m, and the same width as the environment, where the dimensions of the environments are set as 10m × 30m. In each figure, the first row represents the physical environment together with the initial condition of the agents (gray circles) at t = 0 as well as the location of all static nodes (landmarks) over all time periods (shown as pink dots). For each scenario, a total number of 100 agents are considered in the network, among which 10% are selected as landmarks after some initial dispersion based on the maxmin landmark selection algorithm. The detection radius of each agent for encounter and boundary recognition is adopted to be r d = 1cm.We divide the whole run time of scenarios 1, 2, and 3 into 4, 6, and 5 windows, respectively, and implement our proposed local map construction on gathered encounter information over each window. Note that such selection have been made for sake of better visualization of the features, but in general we could select the same number of windows for all scenarios. The point clouds constructed from the estimation of local encounter metrics for different windows are presented in the third row of each figure (in pink color), in accordance with their persistence diagrams in the second rows. On each persistence diagram, 0-dimensional and 1-dimensional topological features (connected components and cycles) are plotted as blue and red dots, respectively, and the corresponding thresholds for the persistence classifiers are sketched as dashed lines. It can be observed the point clouds representing local maps represent the correct topological features of the corresponding local domains covered over each window. This can also be verified by the topological features classified as robust ones in the corresponding persistence diagrams. Moreover, the estimated point clouds also contain some geometric information, which could be exploited to improve the mapping accuracy in future work.In the next row of each the figure, the inter-domain point clouds obtained from the correspondence metric between local maps are plotted followed by the dendrograms representing the results of the hierarchical clustering on each of them. To specify the number of clusters for each point cloud, a clustering threshold value of 50 has been selected for all scenarios. In all cases, except the last three point clouds in scenario 2, they are classified as one cluster. On the other hand, in scenario 2, as a result of the large obstacle, local maps M 4 and M 5 and their corresponding inter-domain point clouds are all divided into two clusters. Finally, from the collection of local maps, and obtained correspondence metrics, we stitch the consecutive pieces of the maps together in order to find a global topological representation of the environments. The final result of such maps for each environment are sketched in the last rows of the Figures 6 -8.

Conclusion and Future Work
In this work, we presented a dynamic mapping approach for biobotic sensor networks under weak localization information, to obtain estimated local and global topological maps of unknown environments based on only proximity information from agents who stochastically investigate an assigned sub-domain of the environment, with few percentage of them acting as static landmarks, while tracking a leading agent by maintaining their connectivity to it in order to cover, explore, and map an area of interest.The topological mapping approach used to obtain local point clouds of sub-domains can be viewed as reconstruction of a manifold sampled from the space of D i × [t i−1 − ∆t, t i + ∆t]. Hence the accuracy of the procedure is dependent on the number of samples taken from that space, which depends on the number of agents, their average velocity, and the time assigned to explore a given sub-domain. We will explore such dependencies to come up with bounds on the values of aforementioned parameters exploiting the existing literature on topological inference from point cloud data  #b42  #b43 . Moreover, the existence and appropriate selection of static landmarks plays an important role in the construction of a distance metric under weak localization conditions. We are investigating the dependencies of the location and number of such landmarks on the estimation errors of pairwise distances, and aim to come up with criteria to choose landmarks in a more optimal and efficient manner. Furthermore, we are currently working on the integration of our topological mapping approach with network SLAM algorithms with range measurements  #b44  to design a hierarchical mapping approach for disaster scenarios which require both ground and underground surveillance. Our future work will also include experimental results of the proposed approach with a swarm robotic platform, as well as the biobotic insects testbed in order to realize exploration and mapping with cyborg insect networks.