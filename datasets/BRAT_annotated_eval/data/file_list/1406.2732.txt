Deep Epitomic Convolutional Neural Networks

Abstract
Deep convolutional neural networks have recently proven extremely competitive in challenging image recognition tasks. This paper proposes the epitomic convolution as a new building block for deep neural networks. An epitomic convolution layer replaces a pair of consecutive convolution and max-pooling layers found in standard deep convolutional neural networks. The main version of the proposed model uses mini-epitomes in place of filters and computes responses invariant to small translations by epitomic search instead of max-pooling over image positions. The topographic version of the proposed model uses large epitomes to learn filter maps organized in translational topographies. We show that error backpropagation can successfully learn multiple epitomic layers in a supervised fashion. The effectiveness of the proposed method is assessed in image classification tasks on standard benchmarks. Our experiments on Imagenet indicate improved recognition performance compared to standard convolutional neural networks of similar architecture. Our models pre-trained on Imagenet perform excellently on Caltech-101. We also obtain competitive image classification results on the smallimage MNIST and CIFAR-10 datasets.

Introduction
Deep learning offers a powerful framework for learning increasingly complex representations for visual recognition tasks. The work of Krizhevsky et al.  #b14  convincingly demonstrated that deep neural networks can be very effective in classifying images in the challenging Imagenet benchmark  #b4 , significantly outperforming computer vision systems built on top of engineered features like SIFT  #b19 . Their success spurred a lot of interest in the machine learning and computer vision communities. Subsequent work has improved our understanding and has refined certain aspects of this class of models  #b27 . A number of different studies have further shown that the features learned by deep neural networks are generic and can be successfully employed in a black-box fashion in other datasets or tasks such as image detection  #b3  #b6  #b21  #b23  #b25  #b27 .The deep learning models that so far have proven most successful in image recognition tasks are feed-forward convolutional neural networks trained in a supervised fashion to minimize a regularized training set classification error by back-propagation. Their recent success is partly due to the availability of large annotated datasets and fast GPU computing, and partly due to some important methodological developments such as dropout regularization and rectifier linear activations  #b14 . However, the key building blocks of deep neural networks for images have been around for many years  #b16 : (1) convolutional multi-layer neural networks with small receptive fields that spatially share parameters within each layer.  #b1  Gradual abstraction and spatial resolution reduction after each convolutional layer as we ascend the network hierarchy, most effectively via maxpooling  #b9  #b24 .In this work we build a deep neural network around the epitomic representation  #b11 . The image epitome is a data structure appropriate for learning translation-aware image representations, naturally disentagling appearance and position modeling of visual patterns. In the context of deep learning, an epitomic convolution layer substitutes a pair of consecutive convolution and max-pooling layers typically used in deep convolutional neural networks. In epitomic matching, for each regularlyspaced input data patch in the lower layer we search across filters in the epitomic dictionary for the strongest response. In max-pooling on the other hand, for each filter in the dictionary we search within a window in the lower input data layer for the strongest response. Epitomic matching is thus an input-centered dual alternative to the filter-centered standard max-pooling.We investigate two main deep epitomic network model variants. Our first variant employs a dictionary of mini-epitomes at each network layer. Each mini-epitome is only slightly larger than the corresponding input data patch, just enough to accomodate for the desired extent of position invariance. For each input data patch, the mini-epitome layer outputs a single value per mini-epitome, which is the maximum response across all filters in the mini-epitome. Our second topographic variant uses just a few large epitomes at each network layer. For each input data patch, the topographic epitome layer outputs multiple values per large epitome, which are the local maximum responses at regularly spaced positions within each topography.We quantitatively evaluate the proposed model primarily in image classification experiments on the Imagenet ILSVRC-2012 large-scale image classification task. We train the model by error backpropagation to minimize the classification log-loss, similarly to  #b14 . Our best mini-epitomic variant achieves 13.6% top-5 error on the validation set, which is 0.6% better than a conventional maxpooled convolutional network of comparable structure whose error rate is 14.2%. Note that the error rate of the original model in  #b14  is 18.2%, using however a smaller network. All these performance numbers refer to classification with a single network. We also find that the proposed epitomic model converges faster, especially when the filters in the dictionary are mean-and contrast-normalized, which is related to  #b27 . We have found this normalization to also accelerate convergence of standard max-pooled networks. We further show that a deep epitomic network trained on Imagenet can be effectively used as black-box feature extractor for tasks such as Caltech-101 image classification. Finally, we report excellent image classification results on the MNIST and CIFAR-10 benchmarks with smaller deep epitomic networks trained from scratch on these small-image datasets. Related work Our model builds on the epitomic image representation  #b11 , which was initially geared towards image and video modeling tasks. Single-level dictionaries of image epitomes learned in an unsupervised fashion for image denoising have been explored in  #b0  #b1 . Recently, single-level mini-epitomes learned by a variant of K-means have been proposed as an alternative to SIFT for image classification  #b22 . To our knowledge, epitomes have not been studied before in conjunction with deep models or learned to optimize a supervised objective. The proposed epitomic model is closely related to maxout networks  #b7 . Similarly to epitomic matching, the response of a maxout layer is the maximum across filter responses. The critical difference is that the epitomic layer is hard-wired to model position invariance, since filters extracted from an epitome share values in their area of overlap. This parameter sharing significantly reduces the number of free parameters that need to be learned. Maxout is typically used in conjunction with max-pooling  #b7 , while epitomes fully substitute for it. Moreover, maxout requires random input perturbations with dropout during model training, otherwise it is prone to creating inactive features. On the contrary, we have found that learning deep epitomic networks does not require dropout in the convolutional layers -similarly to  #b14 , we only use dropout regularization in the fully connected layers of our network.Other variants of max pooling have been explored before. Stochastic pooling  #b26  has been proposed in conjunction with supervised learning. Probabilistic pooling  #b18  and deconvolutional networks  #b28  have been proposed before in conjunction with unsupervised learning, avoiding the theoretical and practical difficulties associated with building probabilistic models on top of max-pooling. While we do not explore it in this paper, we are also very interested in pursuing unsupervised learning methods appropriate for the deep epitomic representation.The topographic variant of the proposed epitomic model naturally learns topographic feature maps. Adjacent filters in a single epitome share values in their area of overlap, and thus constitute a hardwired topographic map. This relates the proposed model to topographic ICA  #b8  and related models  #b12  #b15  #b20 , which are typically trained to optimize unsupervised objectives. 

Deep Epitomic Convolutional Networks


Mini-Epitomic deep networks
We first describe a single layer of the mini-epitome variant of the proposed model, with reference to Fig. 1. In standard max-pooled convolution, we have a dictionary of K filters of spatial size W ×W pixels spanning C channels, which we represent as real-valued vectors {w k } K k=1 with W · W · C elements. We apply each of them in a convolutional fashion to every W×W input patch {x i } densely extracted from each position in the input layer which also has C channels. A reduced resolution output map is produced by computing the maximum response within a small D × D window of displacements p ∈ N input around positions i in the input map which are D pixels apart from each other. The output map {z i,k } of standard max-pooled convolution has spatial resolution reduced by a factor of D across each dimension and will consist of K channels, one for each of the K filters. Specifically:(z i,k , p i,k ) ← max p∈Nimage x T i+p w k(1)where p i,k points to the input layer position where the maximum is attained.In the proposed epitomic convolution scheme we replace the filters with larger mini-epitomes {v k } K k=1 of spatial size V ×V pixels, where V = W + D − 1. Each mini-epitome contains D 2 filters {w k,p } K k=1 of size W ×W , one for each of the D ×D displacements p ∈ N epit in the epitome. We sparsely extract patches {x i } from the input layer on a regular grid with stride D pixels. In the proposed epitomic convolution model we reverse the role of filters and input layer patches, computing the maximum response over epitomic positions rather than input layer positions:(y i,k , p i,k ) ← max p∈Nepitome x T i w k,p(2)where p i,k now points to the position in the epitome where the maximum is attained. Since the input position is fixed, we can think of epitomic matching as an input-centered dual alternative to the filter-centered standard max-pooling.Computing the maximum response over filters rather than image positions resembles the maxout scheme of  #b7 , yet in the proposed model the filters within the epitome are constrained to share values in their area of overlap.Similarly to max-pooled convolution, the epitomic convolution output map {y i,k } has K channels and is subsampled by a factor of D across each spatial dimension. Epitomic convolution has the same computational cost as max-pooled convolution. For each output map value, they both require computing D 2 inner products followed by finding the maximum response. Epitomic convolution requires D 2 times more work per input patch, but this is fully offset by the fact that we extract input patches sparsely with a stride of D pixels.Similarly to standard max-pooling, the main computational primitive is multi-channel convolution with the set of filters in the epitomic dictionary, which we implement as matrix-matrix multiplication and carry out on the GPU, using the cuBLAS library.  To build a deep epitomic model, we stack multiple epitomic convolution layers on top of each other. The output of each layer passes through a rectified linear activation unit y i,k ← max(y i,k + β k , 0) and fed as input to the subsequent layer, where β k is the bias. Similarly to  #b14 , the final two layers of our network for Imagenet image classification are fully connected and are regularized by dropout. We learn the model parameters (epitomic weights and biases for each layer) in a supervised fashion by error back propagation. We present full details of our model architecture and training methodology in the experimental section.

Topographic deep networks
We have also experimented with a topographic variant of the proposed deep epitomic network. For this we use a dictionary with just a few large epitomes of spatial size V × V pixels, with V ≥ W + D − 1. We retain the local maximum responses over D ×D neighborhoods spaced D pixels apart in each of the epitomes, thus yielding (⌊((V − W + 1) − D)/D⌋ + 1) 2 output values for each of the K epitomes in the dictionary. The mini-epitomic variant can be considered as a special case of the topographic one when V = W + D − 1.  Output channels  96  192  256 384 512 512  4096  4096 1000  Filter size  8x8  6x6  3x3 3x3 3x3 3x3  ---Input stride  2x2  1x1  1x1 1x1 1x1 1x1  ---Pooling size  3x3  2x2  ---3x3 --- Table 1: Architecture of the baseline Max-Pool convolutional network.

Optional mean and contrast normalization
Motivated by  #b27 , we have also explored the effect of filter mean and contrast normalization on deep epitomic network training. More specifically, we considered a variant of the model where the epitomic convolution responses are computed as:(y i,k , p i,k ) ← max p∈Nepitome x T iw k,p w k,p λ(3)wherew k,p is a mean-normalized version of the filters and w k,p λ (w T k,pw k,p + λ) 1/2 is their contrast, with λ = 0.01 a small positive constant. This normalization requires only a slight modification of the stochastic gradient descent update formula and incurs negligible computational overhead. Note that the contrast normalization explored here is slightly different than the one in  #b27 , who only scale down the filters whenever their contrast exceeds a pre-defined threshold.We have found the mean and contrast normalization of Eq. (3) to be crucial for learning the topographic version of the proposed model. We have also found that it significantly accelerates learning of the mini-epitome version of the proposed model, as well as the standard max-pooled convolutional model, without however significantly affecting the final performance of these two model.

Image Classification Experiments


Image classification tasks
We have performed most of our experimental investigation on the Imagenet ILSVRC-2012 dataset  #b4 , focusing on the task of image classification. This dataset contains more than 1.2 million training images, 50,000 validation images, and 100,000 test images. Each image is assigned to one out of 1,000 possible object categories. Performance is evaluated using the top-5 classification error. Such large-scale image datasets have proven so far essential to successfully train big deep neural networks with supervised criteria.Similarly to other recent works  #b3  #b23  #b27 , we also evaluate deep epitomic networks trained on Imagenet as a black-box visual feature front-end on the Caltech-101 benchmark  #b5 . This involves classifying images into one out of 102 possible image classes. We further consider two standard classification benchmarks involving thumbnail-sized images, the MNIST digit  #b17  and the CIFAR-10  #b13 , both involving classification into 10 possible classes.

Network architecture and training methodology
For our Imagenet experiments, we compare the proposed deep mini-epitomic and topographic deep networks with deep convolutional networks employing standard max-pooling. For fair comparison, we use as similar architectures as possible, involving in all cases six convolutional layers, followed by two fully-connected layers and a 1000-way softmax layer. We use rectified linear activation units throughout the network. Similarly to  #b14 , we apply local response normalization (LRN) to the output of the first two convolutional layers and dropout to the output of the two fully-connected layers.The architecture of our baseline Max-Pool network is specified on Table 1. It employs max-pooling in the convolutional layers 1, 2, and 6. To accelerate computation, it uses an image stride equal to Layer   1  2  3  4  5  6  7  8  Out  Type  epit-conv epit-conv conv conv conv epit-conv full +  full +  full  + lrn  + lrn  dropout dropout  Output channels  96  192  256 384 512  512  4096  4096 1000  Epitome size  12x12  8x8  ---5x5  ---Filter size  8x8  6x6  3x3 3x3 3x3  3x3  ---Input stride  4x4  3x3  1x1 1x1 1x1  3x3  ---Epitome stride  2x2  1x1  ---1x1 ---  Table 3: Architecture of the proposed Topographic convolutional network.- - 26x26 - - - Filter size 8x8 6x6 3x3 3x3 3x3 3x3 - - - Input stride 4x4 3x3 1x1 1x1 1x1 3x3 - - - Epitome stride 2x2 1x1 - - - 1x1 - - - Epit. pool size 3x3 3x3 - - - 3x3 - - -2 pixels in the first layer. It has a similar structure with the Overfeat model  #b25 , yet significantly fewer neurons in the convolutional layers 2 to 6. Another difference with  #b25  is the use of LRN, which to our experience facilitates training.The architecture of the proposed Epitomic network is specified on Table 2. It has exactly the same number of neurons at each layer as the Max-Pool model but it uses mini-epitomes in place of convolution + max pooling at layers 1, 2, and 6. It uses the same filter sizes with the Max-Pool model and the mini-epitome sizes have been selected so as to allow the same extent of translation invariance as the corresponding layers in the baseline model. We use input image stride equal to 4 pixels and further perform epitomic search with stride equal to 2 pixels in the first layer to also accelerate computation.The architecture of our second proposed Topographic network is specified on Table 3. It uses four epitomes at layers 1, 2 and eight epitomes at layer 6 to learn topographic feature maps. It uses the same filter sizes as the previous two models and the epitome sizes have been selected so as each layer produces roughly the same number of output channels when allowing the same extent of translation invariance as the corresponding layers in the other two models.We have also tried variants of the three models above where we activate the mean and contrast normalization scheme of Section 2.3 in layers 1, 2, and 6 of the network.We followed the methodology of  #b14  in training our models. We used stochastic gradient ascent with learning rate initialized to 0.01 and decreased by a factor of 10 each time the validation error stopped improving. We used momentum equal to 0.9 and mini-batches of 128 images. The weight decay factor was equal to 5×10 −4 . Importantly, weight decay needs to be turned off for the layers that use mean and contrast normalization. Training each of the three models takes two weeks using a single NVIDIA Titan GPU. Similarly to  #b3 , we resized the training images to have small dimension equal to 256 pixels while preserving their aspect ratio and not cropping their large dimension. We also subtracted for each image pixel the global mean RGB color values computed over the whole Imagenet training set. During training, we presented the networks with 220 × 220 crops randomly sampled from the resized image area, flipped left-to-right with probability 0.5, also injecting global color noise exactly as in  #b14 . During evaluation, we presented the networks with 10 regularly sampled image crops (center + 4 corners, as well as their left-to-right flipped versions).   Table 5: Caltech-101 mean accuracy with deep networks pretrained on Imagenet.

Weight visualization
We visualize in Figure 2 the layer weights at the first layer of the networks above. The networks learn receptive fields sensitive to edge, blob, texture, and color patterns.

Classification results
We report at Table 4 our results on the Imagenet ILSVRC-2012 benchmark, also including results previously reported in the literature  #b14  #b25  #b27 . These all refer to the top-5 error on the validation set and are obtained with a single network. Our best result at 13.6% with the proposed Epitomic-Norm network is 0.6% better than the baseline Max-Pool result at 14.2% error. Our Topographic-Norm network scores less well, yielding 15.4% error rate, which however is still better than  #b14  #b27 . Mean and contrast normalization had little effect on final performance for the Max-Pool and Epitomic models, but we found it essential for learning the Topographic model. The improved performance that we got with the Max-Pool baseline network compared to Overfeat  #b25  is most likely due to our use of LRN and aspect ratio preserving image resizing. When preparing this manuscript, we became aware of the work of  #b3  that reports an even lower 13.1% error rate with a max-pooled network, using however significantly more neurons than we do in the convolutional layers 2 to 5.We next assess the quality of the proposed model trained on Imagenet as black-box feature extractor for Caltech-101 image classification. For this purpose, we used the 4096-dimensional output of the last fully-connected layer, without doing any fine-tuning of the network weights for the new task. We trained a 102-way SVM classifier using libsvm  #b2  and the default regularization parameter. For this experiment we just resized the Caltech-101 images to size 220 × 220 without preserving their aspect ratio and computed a single feature vector per image. We normalized the feature vector to have unit length before feeding it into the SVM. We report at Table 5 the mean classification accuracy obtained with the different networks. The proposed Epitomic model performs at 87.8%, 0.5% better than the baseline Max-Pool model.We have also performed experiments with the epitomic model on classifying small images on the MNIST and CIFAR-10 datasets. For these tasks we have trained much smaller networks from scratch, using three epitomic convolutional layers, followed by one fully-connected layer and the final softmax classification layer. Because of the small training set sizes, we have found it beneficial to also employ dropout regularization in the epitomic convolution layers. At Table 6 we report the classification error rates we obtained. Our results are comparable to maxout  #b7 , which achieves state-of-art results on these tasks.

Mean-contrast normalization and convergence speed
We comment on the learning speed and convergence properties of the different models we experimented with on Imagenet. We show in Figure 3 how the top-5 validation error improves as learning progresses for the different models we tested, with or without mean+contrast normalization. For reference, we also include a corresponding plot we re-produced for the original model of Krizhevsky et al.  #b14 . We observe that mean+contrast normalization significantly accelerates convergence of both  Table 6: Classification error rates on small image datasets for maxout  #b7   epitomic and max-pooled models, without however significantly influencing the final model quality.The epitomic models exhibit somewhat improved convergence behavior during learning compared to the max-pooled baselines whose performance fluctuates more.

Conclusions
In this paper we have explored the potential of the epitomic representation as a building block for deep neural networks. We have shown that an epitomic layer can successfully substitute a pair of consecutive convolution and max-pooling layers. We have proposed two deep epitomic variants, one featuring mini-epitomes that empirically performs best in image classification, and one featuring large epitomes and learns topographically organized feature maps. We have shown that the proposed epitomic model performs around 0.5% better than the max-pooled baseline on the challenging Imagenet benchmark and other image classification tasks.In future work, we are very interested in developing methods for unsupervised or semi-supervised training of deep epitomic models, exploiting the fact that the epitomic representation is more amenable than max-pooling for incorporating image reconstruction objectives.

Reproducibility
We implemented the proposed methods by extending the excellent Caffe software framework  #b10 . When this work gets published we will publicly share our source code and configuration files with exact parameters fully reproducing the results reported in this paper.