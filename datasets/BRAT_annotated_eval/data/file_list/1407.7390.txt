Abstract
This paper aims to determine which is the best human action recognition method based on features extracted from RGB-D devices, such as the Microsoft Kinect. A review of all the papers that make reference to MSR Action3D, the most used dataset that includes depth information acquired from a RGB-D device, has been performed. We found that the validation method used by each work differs from the others. So, a direct comparison among works cannot be made. However, almost all the works present their results comparing them without taking into account this issue. Therefore, we present different rankings according to the methodology used for the validation in orden to clarify the existing confusion.

Introduction
In recent years, interest has grown on affordable devices (e.g. Microsoft Kinect or ASUS Xtion Pro) that capture depth quite reliably. Such devices provide a depth image (D), along with an RGB image (thus RGB-D). A depth image can be further processed to obtain marker-less body pose estimation by means of a skeleton model consisting of a series of joints. Due to their low cost, high sample rate and capability to combine visual and depth information, these devices have become widespread in both research and commercial applications. Furthermore, their use has not been restricted to games, for which they were initially designed, but other applications where natural human-computer interaction is required.These devices are widely used in the field of human action recognition (HAR), particularly in indoor scenarios for the recognition of activities of daily living. For research purposes, a variety of datasets for human action (or gesture) recognition Table 1. State-of-the-art datasets for action recognition based on depth or skeletal features, sorted from more quoted to less quoted according to Google Scholar. have been recorded using RGB-D devices (see Table 1). The MSR Action3D dataset  #b0  from Microsoft Research stands out as one of the most used in the literature, as many developed methods for action recognition have been validated with this dataset. Hence, it should be easy to determine the best human action recognition method in a straightforward way by comparing their success and processing rates. However, to the best of our knowledge, this is not possible at the moment as we found that almost all the works compare results obtained with different validation methods.Therefore, this work aims to fill the existing gap in order to enable a fair comparison of the state of the art. We have reviewed 176 papers that make reference to the MSR Action3D dataset. Out of these 176 papers, 62 papers have been considered as they use the MSR Action3D dataset for the validation of the human action (or gesture) recognition methods proposed. They are classified according to the validation method and ranked based on their success rate.The remainder of this paper is organised as follows: Section 2 describes the MSR Action3D dataset employed by the reviewed works. In section 3, an explanation of the inconsistencies found in the number of the used samples is given. Section 4 presents the validation methods used in the reviewed papers and provides a classification of each work according to this. Finally, section 5 presents some conclusions and recommendations for the future. 

MSR Action3D dataset
The MSR Action3D dataset  #b0  contains 20 different actions, performed by 10 different subjects with up to 3 different repetitions. This makes a total of 567 sequences and each one includes depth and skeleton joints. However 10 sequences are not valid in this dataset because the skeletons were either missing or wrong, as explained by the authors 3 . The authors divided the dataset in three subsets of 8 gestures each, as shown in Table 2. Most of the papers working with this dataset have also used them. This was due to the high computational cost of dealing with the overall dataset. The AS1 and AS2 subsets were intended to group actions with similar movement, while AS3 was intended to group complex actions together.3 How many samples are used for testing?Despite of the fact that the MSR Action3D dataset is made up of 567 sequences, the number of instances used in some works is unclear  #b17  #b18  #b19 . There is a lot of confusion concerning this topic. As far as we know, the authors of the dataset firstly described it as made up of twenty actions, where each one was performed by seven subjects for three times  #b0 . However, actions are performed by ten subjects with up to three repetitions as described in the previous section. Many works have compared their results with Li et al. and most of them used ten subjects  #b4  #b20  #b21 . In other words, they may have used a higher number of instances than the work they aim to compare to. Wang et al.  #b1  described the dataset as made up of 402 sequences. For the sake of clarity, this mistake is advertised at the dataset web page 4 . The authors explain that 10 sequences out of the 567 are not used because a number of skeletons are either missing or too erroneous. So, the dataset 3 MSR Action Recognition Datasets and Codes, http://research.microsoft.com/en-us/um/people/zliu/actionrecorsrc/default.htm (last access: 06/26/2014) 4 A list of the used sequences is also provided in the website is eventually composed of 557 sequences. However, it is curious to see how recent works  #b18  #b19  #b22  still mention that the dataset is composed of 402 sequences and directly compare their results with the state-of-the-art papers that use other number of instances. Furthermore, other authors have intentionally used a subset of the whole dataset, e.g. 17 actions, 8 subjects and 3 repetitions (408 samples). Due to this, the AS1, AS2 and AS3 subsets are composed of different actions too, thereby they compare their results with works that use a different number of instances.As a consequence, it is very difficult to confirm whether these works use 402, 557 or 567 samples as we are not sure whether the authors are aware of these key aspects concerning the dataset, or if those are only naive text mistakes. Moreover, the missing information concerning the number of instances prevents to make a fair comparison between different methods.

Which is the validation method used?
Regarding the experimentation method used by many authors working with the MSR Action3D dataset, it is worth to mention that there is a lack of agreement. In the paper by Li et al.  #b0  where the dataset was firstly presented, three tests are performed: 1/3, 2/3 and cross-subject test. In the first two tests, 1/3 and 2/3 of the instances are respectively used as training samples and the rest as testing samples. In the third test, half of the subjects are used for training and the remainder for testing. However, it is not described which instances or subjects are actually used in each partition of the dataset.Given that information is missing, we could assume that the 1/3 means to split the dataset using the first repetition of each action performed by each subject as training, and to use the remainder for testing. The same could be assumed for the 2/3. However, if we only consider instances as a whole, we can split the dataset in a different way. For instance, the dataset can be split using 1/3 (or 2/3) of all the instances for training. The same is true for the cross-subject test. It is not stated which instances are used. Any half of all the subjects can be used for training, e.g. 1, 2, 3, 9 and 10; and the remainder for testing, i.e. 4, 5, 6, 7 and 8. Given that it is not clear which instances are used, each researcher is free to interpret anything, thereby comparing different methods where a distinct methodology has been used for the experimentation. However, this is not desirable to compare and decide which method performs better.In the cross-subject test employed by Li et al.  #b0  the actual samples of subjects 1, 3, 5, 7 and 9 are used for training, whereas actors 2, 4, 6, 8 and 10 are used for validation. This test is followed by many authors as shown in Table 3. While some authors use the mentioned settings for their training and validation sets, other authors use subjects 1-5 for training and 6-10 for validation (see Table 4). Regardless of the used setup, most of the works state that they follow the same settings as Li et al. but do not provide a description of such a setup. Due to this, we assume that they follow the same validation than Li et al., so Table 3 and Table 4 can even have classification mistakes. Anyway, a fair comparison cannot be performed. Indeed, when it is sure that the same setup has been used, sometimes results only show an accuracy score and the authors do not give an explanation of what it represents, i.e. the average of the AS1, AS2 and AS3 tests, or the overall accuracy of using the whole dataset (20 actions).    Due to all this confusion about how to split the dataset in two sets for training and validation, some authors randomly choose half of the subjects for the training set, and select the rest of the subjects for the validation set. As in 2-fold cross validation, they repeat the test using the previous validation set as the training set and vice versa. In this case, the final result is the average of both tests (see Table 5). In other works, instead of performing a 2-fold cross validation, some authors randomly select the two sets and repeat the experiment several times. For example, Miranda et al.  #b63  perform a random selection of half of the actors as training set and the other half as validation set. This is repeated 10 times and the final result is the average of the results of each run. Other authors repeat the test 100 times instead of 10  #b64  #b65 , and even 200 times  #b28  (see Table 6). However, although the tests are repeated many times, all the possible splits are not considered, i.e. all the possible combinations (252 tests) of using 5 subjects for training and the remaining ones for testing. Only a few works perform this test. In Table 6 these works have been included with the 252 number in the third column. This indicates that they performed the test with all the possible combinations. Another approach used by some authors is to perform a leave-one-actorout cross-validation test. In this case, actor invariance is specifically tested by training with all but one actor, and testing the method with the unseen one. This is repeated for all the actors, averaging the returned success rates (see Table 7).Finally, in addition to the described validation methods that are frequently used in the literature, there are other authors that have not been included in any table because either the validation method is unclear  #b72  #b73  or the employed settings are not used by more than one author  #b74  #b75  #b76  #b77 . For instance, Ofli et al.  #b74  use a subset of 17 actions and 8 subjects. They train with 5 subjects and validate with 3 subjects in order to obtain the success rate (41.18% for the whole dataset). These results are improved in  #b76  with the same setup (83.89% for the whole dataset). Cottone et al.  #b75  perform a leave-one-sequence-out cross validation, training with all the sequences in the dataset but one that is used for testing. Then, they perform 10 of these tests obtaining the average success rate (90.47% for the average of AS1, AS2 and AS3). Sabinas et al.  #b77  are focused on early detection of gestures, i.e. without seeing all the information, and their experimentation is based on one-shot learning. Therefore, their results are not directly comparable (47% for the average of AS1, AS2 and AS3). 

Conclusions
In this work, we have aimed to give an answer to the question of which is the best action recognition method based on features extracted from depth and skeletal data. Based on the review the present work has performed, it can be observed that we cannot answer this question with confidence. In other words, we cannot know so far. Hence, we have presented the most important divergences in the comparison of action recognition methods that use the MSR Action3D dataset. Among these, we can highlight the mismatch in the number of samples used by most of the works and the different validation methods that have been used. As we have seen, the validation performed by Li et al. is one of the most used. However, the missing information about how to split the dataset into training and validation sets has led to a lot of confusion. Furthermore, most of the authors do not describe how this division is performed in their works. Therefore, experiments cannot be reproduced and fair comparisons cannot be made. Thus, in this work we have tried to clear up the existing confusion. This may enable to improve future comparisons and increase the awareness of the need of clarifying experimental settings. Among all the validation methods reviewed in this work, we consider that the cross validation considering all the possible splits of the dataset, i.e. all the possible combinations (252 tests) of using 5 subjects for training and the remaining ones for testing, is the most robust validation method. However, if testing your method with the 5-5 splits cross validation is very demanding concerning computational cost, then the leave-one-actor-out cross validation is the one we recommend under these conditions.

Notes to authors
As it has been difficult in some cases to understand the validation method of the papers, we encourage authors of the reviewed works to contact us in case their works had been misclassified in the previous tables. This way, we will be able to update the document and correct it. Similarly, authors of new works are also encouraged to contact us in order to incorporate their works if so desired.