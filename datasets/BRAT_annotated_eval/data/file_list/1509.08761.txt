Reasoning in Infinitely Valued G-IALCQ

Abstract
Fuzzy Description Logics (FDLs) are logic-based formalisms used to represent and reason with vague or imprecise knowledge. It has been recently shown that reasoning in most FDLs using truth values from the interval [0, 1] becomes undecidable in the presence of a negation constructor and general concept inclusion axioms. One exception to this negative result are FDLs whose semantics is based on the infinitely valued Gödel t-norm (G). In this paper, we extend previous decidability results for G-IALC to deal also with qualified number restrictions. Our novel approach is based on a combination of the known crispification technique for finitely valued FDLs and the automatabased procedure originally developed for reasoning in G-IALC. The proposed approach combines the advantages of these two methods, while removing their respective drawbacks. 2 http://www.ihtsdo.org/snomed-ct/ 3 http://www.opengalen.org/

Introduction
It is well-known that one of the main requirements for the development of an intelligent application is a formalism capable of representing and handling knowledge without ambiguity. Description Logics (DLs) are a well-studied family of knowledge representation formalisms  #b0 . They constitute the logical backbone of the standard Semantic Web ontology language OWL 2, 1 and its profiles, and have been successfully applied to represent the knowledge of many and diverse application domains, particularly in the bio-medical sciences.DLs describe the domain knowledge using concepts (such as Patient) that represent sets of individuals, and roles (hasRelative) that represent connections between individuals. Ontologies are collections of axioms formulated over these concepts and roles, which restrict their possible interpretations. The typical axioms considered in DLs are assertions, like bob:Patient, providing knowledge about specific individuals; and general concept inclusions (GCIs), such as Patient ⊑ Human, which express general relations between concepts. Different DLs are characterized by the constructors 1 http://www.w3.org/TR/owl2-overview/ allowed to generate complex concepts and roles from atomic ones. ALC [Schmidt-Schauß and Smolka, 1991] is a prototypical DL of intermediate expressivity that contains the concept constructors conjunction (C ⊓ D), negation (¬C), and existential restriction (∃r.C for a role r). If additionally qualified number restrictions ( n r.C for n ∈ N) are allowed, the resulting logic is denoted by ALCQ. Common reasoning problems in ALCQ, such as consistency of ontologies or subsumption between concepts, are known to be EXPTIMEcomplete [Schild, 1991;Tobies, 2001].Fuzzy Description Logics (FDLs) have been introduced as extensions of classical DLs to represent and reason with vague knowledge. The main idea is to consider all the truth values from the interval [0, 1] instead of only true and false. In this way, it is possible give a more fine-grained semantics to inherently vague concepts like LowFrequency or HighConcentration, which can be found in biomedical ontologies like SNOMED CT, 2 and Galen. 3 The different members of the family of FDLs are characterized not only by the constructors they allow, but also by the way these constructors are interpreted.To interpret conjunction in complex concepts like ∃hasHeartRate.LowFrequency ⊓ ∃hasBloodAlcohol.HighConcentration, a popular approach is to use so-called tnorms  #b5 . The semantics of the other logical constructors can then be derived from these t-norms in a principled way, as suggested by  #b3 . Following the principles of mathematical fuzzy logic, existential restrictions are interpreted as suprema of truth values. However, to avoid problems with infinitely many truth values, reasoning in fuzzy DLs is often restricted to so-called witnessed models  #b4 , in which these suprema are required to be maxima; i.e., the degree is witnessed by at least one domain element.Unfortunately, reasoning in most FDLs becomes undecidable when the logic allows to use GCIs and negation under witnessed model semantics  #b0  #b2 .One of the few exceptions known are FDLs using the Gödel t-norm defined as min{x, y} to interpret conjunctions . Despite not being as wellbehaved as finitely valued FDLs, which use a finite total order of truth values instead of the infinite interval [0, 1] , it has been shown using an automata-based approach that reasoning in Gödel extensions of ALC exhibits the same complexity as in the classical case, i.e. it is EXPTIME-complete. A major drawback of this approach is that it always has an exponential runtime, even when the input ontology has a simple form.In this paper, we extend the results of  to deal with qualified number restrictions, showing again that the complexity of reasoning remains the same as for the classical case; i.e., it is EXPTIME-complete. To this end, we focus only on the problem of local consistency, which is a generalization of the classical concept satisfiability problem. We follow a more practical approach that combines the automata-based construction from  with reduction techniques developed for finitely valued FDLs  #b6  #b1 . We exploit the forest model property of classical ALCQ  #b4  to encode order relationships between concepts in a fuzzy interpretation in a manner similar to the Hintikka trees from . However, instead of using automata to determine the existence of such trees, we reduce the fuzzy ontology directly into a classical ALCQ ontology whose local consistency is equivalent to that of the original ontology. This enables us to use optimized reasoners for classical DLs. In addition to the cut-concepts of the form C q for a fuzzy concept C and a value q, which are used in the reductions for finitely valued DLs  #b6  #b1 , we employ order concepts C D expressing relationships between fuzzy concepts. Contrary to the reductions for finitely valued Gödel FDLs presented by  #b1 , our reduction produces a classical ontology whose size is polynomial in the size of the input fuzzy ontology. Thus, we obtain tight complexity bounds for reasoning in this FDL [Tobies, 2001]. An extended version of this paper appears in .

Preliminaries
For the rest of this paper, we focus solely on vague statements that take truth degrees from the infinite interval [0, 1], where the Gödel t-norm, defined by min{x, y}, is used to interpret logical conjunction. The semantics of implications is given by the residuum of this t-norm; that is,x ⇒ y := 1 if x y, y otherwise.We use both the residual negation ⊖x := x ⇒ 0 and the involutive negation ∼x := 1 − x in the rest of this paper. We first recall some basic definitions from , which will be used extensively in the proofs throughout this work. An order structure S is a finite set containing at least the numbers 0, 0.5, and 1, together with an involutive unary operation inv : S → S such that inv(x) = 1 − x for all x ∈ S ∩ [0, 1]. A total preorder over S is a transitive and total binary relation ⊆ S × S. For x, y ∈ S, we write x ≡ y if x y and yx. Notice that ≡ is an equivalence relation on S. The total preorders considered in  have to satisfy additional properties; for instance, that 0 and 1 are always the least and greatest elements, respectively. These properties can be found in our reduction in the axioms of red(U) (see Section 3 for more details).The syntax of the FDL G-IALCQ is the same as that of classical ALCQ, with the addition of the implication constructor (denoted by the use of I at the beginning of the name). This constructor is often added to FDLs, as the residuum cannot, in general, be expressed using only the t-norm and negation operators, in contrast to the classical semantics. In particular, this holds for the Gödel t-norm and its residuum, which is the focus of this work. Let now N C , N R , and N I be mutually disjoint sets of concept, role, and individual names, respectively. Concepts of G-IALCQ are built using the syntax ruleC, D ::= ⊤ | A | ¬C | C ⊓ D | C → D | ∀r.C | n r.C,where A ∈ N C , r ∈ N R , C, D are concepts, and n ∈ N. We use the abbreviations⊥ := ¬⊤, C ⊔ D := ¬(¬C ⊓ ¬D),∃r.C := 1 r.C, and n r.C := ¬( (n + 1) r.C)Notice that Bobillo et al. consider a different definition of atmost restrictions, which uses the residual negation; that is, they define n r.C := ( (n + 1) r.C) → ⊥ [2012]. This has the strange side effect that the value of n r.C is always either 0 or 1 (see the semantics below). However, this discrepancy in definitions is not an issue since our algorithm can handle both cases.The semantics of this logic is based on interpretations. A G-interpretation is a pair I = (∆ I , · I ), where ∆ I is a nonempty set called the domain, and · I is the interpretation function that assigns to each individual name a ∈ N I an element a I ∈ ∆ I , to each concept name A ∈ N C a fuzzy set A I : ∆ I → [0, 1], and to each role name r ∈ N R a fuzzy binary relation r I : ∆ I × ∆ I → [0, 1]. The interpretation of complex concepts is obtained from the semantics of first-order fuzzy logics via the well-known translation from DL concepts to first-order logic  #b1 , i.e. for all d ∈ ∆ I ,⊤ I (d) := 1 (¬C) I (d) := 1 − C I (d) (C ⊓ D) I (d) := min{C I (d), D I (d)} (C → D) I (d) := C I (d) ⇒ D I (d) (∀r.C) I (d) := inf e∈∆ I r I (d, e) ⇒ C I (e) ( n r.C) I (d) := sup e1,...,en∈∆ I pairwise different n min i=1 min{r I (d, e i ), C I (e i )}Recall that the usual duality between existential and value restrictions that appears in classical DLs does not hold in G-IALCQ.A classical interpretation is defined similarly, with the set of truth values restricted to 0 and 1. In this case, the semantics of a concept C is commonly viewed as a set C I ⊆ ∆ I instead of the characteristic function C I : ∆ I → {0, 1}.In the following, we restrict all reasoning problems to socalled witnessed G-interpretations  #b4 , which intuitively require the suprema and infima in the semantics to be maxima and minima, respectively. More formally, the G-interpretation I is witnessed if, for every d ∈ ∆ I , n 0, r ∈ N R , and concept C, there exist e, e 1 , . . . , e n ∈ ∆ I (where e 1 , . . . , e n are pairwise different) such that(∀r.C) I (d) = r I (d, e) ⇒ C I (e) and ( n r.C) I (d) = n min i=1 min{r I (d, e i ), C I (e i )}.The axioms of G-IALCQ extend classical axioms by allowing to compare degrees of arbitrary assertions in so-called ordered ABoxes , and to state inclusions relationships between fuzzy concepts that hold to a certain degree, instead of only 1. A classical assertion is an expression of the form a:C or (a, b):r for a, b ∈ N I , r ∈ N R , and a concept C. An order assertion is of the form α ⊲⊳ q or α ⊲⊳ β where ⊲⊳ ∈ {<, , =, , >}, α, β are classical assertions, and q ∈ [0, 1]. A (fuzzy) general concept inclusion axiom (GCI) is of the form C ⊑ D q for concepts C, D and q ∈ [0, 1]. An ordered ABox is a finite set of order assertions, a TBox is a finite set of GCIs, and an ontology O = (A, T ) consists of an ordered ABox A and a TBox T . A G-interpretation I satisfies (or is a model of) an order assertion α ⊲⊳ β if α I ⊲⊳ β I (where (a:C) I := C I (a I ), ((a, b):r) I := r I (a I , b I ), and q I := q); it satisfies a GCI C ⊑ D q if C I (d) ⇒ D I (d) q holds for all d ∈ ∆ I ; and it satisfies an ordered ABox, TBox, or ontology if it satisfies all its axioms. An ontology is consistent if it has a (witnessed) model.Given an ontology O, we denote by rol(O) the set of all role names occurring in O and by sub(O) the closure under negation of the set of all subconcepts occurring in O. We consider the concepts ¬¬C and C to be equal, and thus the latter set is of quadratic size in the size of O. Moreover, we denote by V O the closure under the involutive negation x → 1 − x of the set of all truth degrees appearing in O, together with 0, 0.5, and 1. This set is of size linear on the size of O. We sometimes denote the elements of V O ⊆ [0, 1] as 0 = q 0 < q 1 < · · · < q k−1 < q k = 1.We stress that we do not consider the general consistency problem in this paper, but only a restricted version that uses only one individual name. An ordered ABox A is local if it contains no role assertions (a, b):r and there is a single individual name a ∈ N I such that all order assertions in A only use a. The local consistency problem, i.e. deciding whether an ontology (A, T ) with a local ordered ABox A is consistent, can be seen as a generalization of the classical concept satisfiability problem .Other common reasoning problems for FDLs, such as concept satisfiability and subsumption can be reduced to local consistency : the subsumption between C and D to degree q w.r.t. a TBox T is equivalent to the (local) inconsistency of ({ a:C → D < q }, T ), and the satisfiability of C to degree q w.r.t. T is equivalent to the (local) consistency of ({ a:C q }, T ).In the following section we show how to decide local consistency of a G-IALCQ ontology through a reduction to classical ontology consistency.

Deciding Local Consistency
Let O = (A, T ) be a G-IALCQ ontology where A is a local ordered ABox that uses only the individual name a. The main ideas behind the reduction to classical ALCQ are that it suffices to consider tree-shaped interpretations, where each domain element has a unique role predecessor, and that we only have to consider the order between values of concepts, instead of their precise values. This insight allows us to consider only finitely many different cases .To compare the values of the elements of sub(O) at different domain elements, we use the order structureU := V O ∪ sub(O) ∪ sub ↑ (O) ∪ {λ, ¬λ}, where sub ↑ (O) := { C ↑ | C ∈ sub(O)}, inv(λ) := ¬λ, inv(C) := ¬C, and inv( C ↑ ) := ¬C ↑ , for all concepts C ∈ sub(O).The idea is that total preorders over U describe the relationships between the values of sub(O) and V O at a single domain element. The elements of sub ↑ (O) allow us to additionally refer to the relevant values at the unique role predecessor of the current domain element (in a tree-shaped interpretation). The value λ represents the value of the role connection from this predecessor. For convenience, we define q ↑ := q for all q ∈ V O .In order to describe such total preorders in a classical ALCQ ontology, we employ special concept names of the form α β for α, β ∈ U. This differs from previous reductions for finitely valued FDLs  #b6  #b1  in that we not only consider cut-concepts of the form q α with q ∈ V O , but also relationships between different concepts. 4 For convenience, we introduce the abbreviations α β := β α , α < β := ¬ α β , and similarly for = and >. Furthermore, we define the complex expressions• α min{β, γ} := α β ⊔ α γ , • α min{β, γ} := α β ⊓ α γ , • α β ⇒ γ := ( β γ → α 1 )⊓( β > γ → α γ ),• α β ⇒ γ := β γ ⊔ α γ , and extend these notions to the expressions α ⊲⊳ β ⇒ γ etc., for ⊲⊳ ∈ {<, =, >}, analogously.For each concept C ∈ sub(O), we now define the classical ALCQ TBox red(C), depending on the form of C, as follows. red(U) := { α β ⊓ β γ ⊑ α γ | α, β, γ ∈ U} ∪ {⊤ ⊑ α β ⊔ β α | α, β ∈ U} ∪ {⊤ ⊑ 0 α ⊓ α 1 | α ∈ U} ∪ {⊤ ⊑ α ⊲⊳ β | α, β ∈ V O , α ⊲⊳ β} ∪ { α β ⊑ inv(β) inv(α) | α, β ∈ U}, red(↑) := { α ⊲⊳ β ⊑ ∀r. α ↑ ⊲⊳ β ↑ | α, β ∈ V O ∪ sub(O), r ∈ rol(O)}, red(T ) := {⊤ ⊑ q C ⇒ D | C ⊑ D q ∈ T } ∪ C∈sub(O) red(C).We briefly explain this construction. The reductions of the order assertions and fuzzy GCIs in O are straightforward; the former expresses that the individual a must belong to the corresponding order concept C ⊲⊳ q or C ⊲⊳ D, while the latter expresses that every element of the domain must satisfy the restriction provided by the fuzzy GCI. The axioms of red(U) intuitively ensure that the relation " " forms a total preorder that is compatible with all the values in V O , and that inv is an antitone operator. Finally, the TBox red(↑) expresses a connection between the orders of a domain element and those of its role successors.The following lemmata show that this reduction is correct; i.e., that it preserves local consistency. Lemma 1. If red(O) has a classical model, then O has a G-model.Proof. By  #b4 , red(O) must have a tree model I, i.e. we can assume that ∆ I is a prefix-closed subset of N * , a I = ε, for all n 1 , . . . , n k ∈ N, k 1, with u := n 1 . . . n k ∈ ∆ I , the element u ↑ := n 1 . . . n k−1 ∈ ∆ I is an r-predecessor of u for some r ∈ rol(O), and there are no other role connections. For any u ∈ ∆ I , we denote by u the corresponding total preorder on U, that is, we define α u β iff u ∈ α β I , and by ≡ u the induced equivalence relation.As a first step in the construction of a G-model of O, we define the auxiliary function v : U × ∆ I → [0, 1] that satisfies the following conditions for all u ∈ ∆ I :(P1) for all q ∈ V O , we have v(q, u) = q, (P2) for all α, β ∈ U, we have v(α, u) v(β, u) iff α u β, (P3) for all α ∈ U, we have v(inv(α), u) = 1 − v(α, u), (P4) if u = ε, then for all C ∈ sub(O) it holds that v(C, u ↑ ) = v( C ↑ , u).We define v by induction on the structure of ∆ I starting with ε. Let U/≡ ε be the set of all equivalence classes of ≡ ε . Then ε yields a total order ε on U/≡ ε . Since I satisfies red(U), we have[0] ε < ε [q 1 ] ε < ε · · · < ε [q k−1 ] ε < ε [1] ε w.r.t. this order. For every [α] ε ∈ U/≡ ε , we now set inv([α] ε ) := [inv(α)] ε .This function is well-defined by the axioms in red(U). On all α ∈ [q] ε for q ∈ V O , we now define v(α, ε) := q, which ensures that (P1) holds. For the equivalence classes that do not contain a value from V O , note that by red(U), every such class must be strictly between [q i ] ε and [q i+1 ] ε for q i , q i+1 ∈ V O . We denote the n i equivalence classes between [q i ] ε and [q i+1 ] ε as follows:[q i ] ε < ε E i 1 < ε · · · < ε E i ni < ε [q i+1 ] ε .For every α ∈ E i j , we set v(α, ε) := q i + j ni+1 (q i+1 − q i ), which ensures that (P2) is also satisfied. Furthermore, observe that 1 − q i+1 and 1 − q i are also adjacent in V O and we have[1 − q i+1 ] ε < ε inv(E i ni ) < ε · · · < ε inv(E i 1 ) < ε [1 − q i ] εbythe axioms in red(U). Hence, it follows from the definition of v(α, ε) that (P3) holds.Let now u ∈ ∆ I be such that the function v, satisfying the properties (P1)-(P4), has already been defined for u ↑ . Since I is a tree model, there must be an r ∈ N R such that (u ↑ , u) ∈ r I . We again consider the set of equivalence classes U/≡ u and set v(α, u) := q for all q ∈ V O and α ∈ [q] u , and v(α, u) := v(C, u ↑ ) for all C ∈ sub(O) and α ∈ [ C ↑ ] u . To see that this is well-defined, consider the case that [C ↑ ] u = [ D ↑ ] u , i.e. u ∈ C ↑ = D ↑ I .From the axioms in red(↑) and the fact that (u ↑ , u) ∈ r I , it follows that u ↑ ∈ C = D I , and thus[C] u ↑ = [D] u ↑ . Since (P2) is satisfied for u ↑ , we get v(C, u ↑ ) = v(D, u ↑ ).The same argument shows that[q] u = [ q ↑ ] u = [ C ↑ ] u implies v(q, u ↑ ) = v(C, u ↑ ).For the remaining equivalence classes, we can use a construction analogous to the case for ε by considering the two unique neighboring equivalence classes that contain an element of V O ∪ sub(O) (for which v has already been defined). This construction ensures that (P1)-(P4) hold for u.Based on the function v, we define the G-interpretation I f over the domain ∆ I f := ∆ I , where a I f := a I = ε;A I f (u) := v(A, u) if A ∈ sub(O), 0 otherwise;andr I f (u, w) := v(λ, w) if (u, w) ∈ r I , 0 otherwise.We show by induction on the structure of C thatC I f (u) = v(C, u) for all C ∈ sub(O) and u ∈ ∆ I . (1)For concept names, this holds by the definition of I f . For ⊤, we know that ⊤ I f (u) = 1 = v(⊤, u) by the definition of red(⊤) and (P2). For ¬C, we have(¬C) I f (u) = 1 − C I f (u) = 1 − v(C, u) = v(¬C, u)by the induction hypothesis and (P3). For conjunctions C⊓D, we know that(C ⊓ D) I f (u) = min{C I f (u), D I f (u)} = min{v(C, u), v(D, u)} = v(C ⊓ D, u)by the definition of red(C ⊓ D) and (P2). Implications can be treated similarly. Consider a value restriction ∀r.C ∈ sub(O). For every w ∈ ∆ I with (u, w) ∈ r I , we have w ∈ ∀r.C ↑ λ ⇒ C I since I satisfies red(∀r.C). By the induction hypothesis, the fact that w ↑ = u, (P2), and (P4), this implies thatv(∀r.C, u) v(λ, w) ⇒ v(C, w) = r I f (u, w) ⇒ C I f (w), and thus (∀r.C) I f (u) = inf w∈∆ I , (u,w)∈r I r I f (u, w) ⇒ C I f (w) v(∀r.C, u).Furthermore, by the existential restriction introduced in red(∀r.C), we know that there exists a w 0 ∈ ∆ I such that (u, w 0 ) ∈ r I and w 0 ∈ ∀r.C ↑ λ ⇒ C I . By the same arguments as above, we get v(∀r.C, u) r I f (u,w 0 ) ⇒ C I f (w 0 ) (∀r.C) I f (u),which concludes the proof of (1) for ∀r.C. As a by-product, we have found in the element w 0 the witness required for satisfying the concept ∀r.C at u.Consider now n r.C ∈ sub(O). For any n-tuple (w 1 , . . . , w n ) of different domain elements with (u, w 1 ), . . . , (u, w n ) ∈ r I , by red( n r.C) there must be an index i, 1 i n, such that w i / ∈ n r.C ↑ < min{λ, C} I . Using arguments similar to those introduced above, we obtain that v( n r.C, u) min{rI f (u, w i ), C I f (w i ) n min j=1 min{r I f (u, w j ), C I f (w j )}.On the other hand, we know that there are n different elements w 0 1 , . . . , w 0 n ∈ ∆ I such that (u, w 0 j ) ∈ r I and w j ∈ n r.C ↑ min{λ, C} I for all j, 1 j n. As in the case of ∀r.C above, we conclude that v( n r.C, u)n min j=1 min{r I f (u, w 0 j ), C I f (w 0 j )} ( n r.C) I f (u) v( n r.C, u),as required. Furthermore, w 0 1 , . . . , w 0 n are the required witnesses for n r.C at u. This concludes the proof of (1).It remains to be shown that I f is a model of O. For every a:C ⊲⊳ q ∈ A, we have a I = ε ∈ [C ⊲⊳ q] I , and thus (1) For any α ∈ U and ̺ ∈ ∆ Ic , we define α I (̺) asC I f (a I f ) = v(C, ε) ⊲⊳ v(q, ε) = q byC I (tail(̺)) if α = C ∈ sub(O); C I (prev(̺)) if α = C ↑ , C ∈ sub(O); q if α = q ∈ V O ; role(̺) I (prev(̺), tail(̺)) if α = λ; 1 − role(̺) I (prev(̺), tail(̺)) if α = ¬λ.Note that for ̺ = ε this expression is only defined for α ∈ V O ∪ sub(O). We fix the value of α I (ε) for all other α arbitrarily, in such a way that for all α, β ∈ U we have α I (ε) β I (ε) iff inv(β) I (ε) inv(α) I (ε). We can now define the interpretation of all concept names α β with α, β ∈ U as α βIc := {̺ | α I (̺) β I (̺)}.It is easy to see that we have ̺ ∈ α ⊲⊳ β Ic iff α I (̺) ⊲⊳ β I (̺) also for all other order expressions ⊲⊳, and that I c satisfies red(U). We now show that I c satisfies the remaining parts of red(O).For any order assertion a:C ⊲⊳ a:D ∈ A we have C I (a I ) ⊲⊳ D I (a I ). This implies that C I (ε) ⊲⊳ D I (ε), and thus a I = ε ∈ C ⊲⊳ D Ic , as required. A similar argument works for assertions of the form a:C ⊲⊳ q . Consider now a GCI C ⊑ D q ∈ T and any ̺ ∈ ∆ Ic . We know that C I (tail(̺)) ⇒ D I (tail(̺)) q, and thus ̺ ∈ q C ⇒ D Ic . For red(↑), consider any α, β ∈ V O ∪ sub(O), r ∈ rol(O), and ̺ ∈ α ⊲⊳ β Ic . Thus, it holds that α I (̺) ⊲⊳ β I (̺). Every r-successor of ̺ in I c must be of the form ̺rd. Since α I ↑ (̺rd) = α I (̺) ⊲⊳ β I (̺) = β I ↑ (̺rd), we know that all r-successors of ̺ satisfy α ↑ ⊲⊳ β ↑ .It remains to be shown that I c satisfies red(C) for all concepts C ∈ sub(O). For C = ⊤, the claim follows from the fact that ⊤ I (̺) = ⊤ I (tail(̺)) = 1. For ¬C, the result is trivial, and for conjunctions and implications, it follows from the semantics of ⊓ and → and the properties of min and ⇒, respectively.Consider the case of ∀r.C and an arbitrary domain element ̺ ∈ ∆ Ic , and set d := tail(̺). Since I is witnessed, there must be an e ∈ ∆ I such that ∀r.C I ↑ (̺re) = (∀r.C) I (d) = r I (d, e) ⇒ C I (e) = λ I (̺re) ⇒ C I (̺re).Since (̺, ̺re) ∈ r Ic , this shows that ∃r. ∀r.C ↑ λ ⇒ C is satisfied by ̺ in I c . Additionally, for any r-successor ̺re of ̺ we have ∀r.C I ↑ (̺re) = (∀r.C) I (d) r I (d, e) ⇒ C I (e) = λ I (̺re) ⇒ C I (̺re), and thus ∀r. ∀r.C ↑ λ ⇒ C is also satisfied. For at-least restrictions n r.C, we similarly know that there are n different elements e 1 , . . . , e n such that, for all i, 1 i n, Since also the elements ̺re 1 , . . . , ̺re n are different, this shows that the at-least restriction n r. n r.C ↑ min{λ, C} is satisfied by I c at ̺. On the other hand, for all n-tuples (̺re 1 , . . . , ̺re n ) of different r-successors of ̺ and all i, 1 i n, we must have n r.C I ↑ (̺re i ) = ( n r.C) I (d) and thus there must be at least one j, 1 j n, such that ̺re j ∈ n r.C ↑ min{λ, C} Ic .In other words, there can be no n different elements of the form ̺re that satisfy ̺re ∈ n r.C ↑ < min{λ, C} Ic , i.e.̺ / ∈ n r. n r.C ↑ < min{λ, C} Ic .In contrast to the reductions for finitely valued Gödel FDLs  #b1 , the size of red(O) is always polynomial in the size of O. The reason is that we do not translate the concepts occurring in the ontology recursively, but rather introduce a polynomialsized subontology red(C) for each relevant subconcept C. Moreover, we do not need to introduce role hierarchies for our reduction, since the value of role connections is expressed using the special element λ. EXPTIME-completeness of concept satisfiability in classical ALCQ [Schild, 1991;Tobies, 2001] now yields the following result.

Footnote
4 : For the rest of this paper, expressions of the form α β denote (classical) concept names.