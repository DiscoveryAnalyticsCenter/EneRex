Interactively Test Driving an Object Detector: Estimating Performance on Unlabeled Data

Abstract
In this paper, we study the problem of 'test-driving' a detector, i.e. allowing a human user to get a quick sense of how well the detector generalizes to their specific requirement. To this end, we present the first system that estimates detector performance interactively without extensive ground truthing using a human in the loop. We approach this as a problem of estimating proportions and show that it is possible to make accurate inferences on the proportion of classes or groups within a large data collection by observing only 5 − 10% of samples from the data. In estimating the false detections (for precision), the samples are chosen carefully such that the overall characteristics of the data collection are preserved. Next, inspired by its use in estimating disease propagation we apply pooled testing approaches to estimate missed detections (for recall) from the dataset. The estimates thus obtained are close to the ones obtained using ground truth, thus reducing the need for extensive labeling which is expensive and time consuming.

Introduction
Object detection is one of the most popular and practical applications of computer vision today. Even though it has been extensively studied for over two decades, it continues to be a challenging problem. The difficulty in solving the problem is attributed to several factors such as change in lighting, pose, viewpoint, size, shape and texture. However, there have been significant advances in building robust object detectors that are finally making them commercially viable in applications for home security, surveillance, online social networks, online shopping etc. In the near future, it is conceivable that even individual end-users will wish to pur-This work was supported in part by the NSF-CCF-CIF award 1320267, ONR Grant N00014-12-1-0124 subaward Z868302 and by ASU startup grant. chase specific detectors for their specific use. For example VMX  #b1 , is being developed as a "computer vision as a service" that allows one to outsource detectors and classifiers while focusing on their applications. In such a scenario, how does one allow a user to get a quick sense of how well the detector generalizes to their specific requirement, as opposed to interpreting the ROC curves of detectors on certain test-beds when the test-beds themselves may or may not be reflective of a user's intended deployment scenario. Further, there has been an explosion of the number of detectors in the past decade promoted by challenges such as PASCAL VOC  #b11  where in the past three years alone, 43 methods com-pleted the challenge (2010 − 22, 2011 − 13, 2012 − 8)  #b0 . Traditionally, rigorous evaluation of detectors requires extensive ground-truthing, which by its very nature restricts an end-user from judging how well the detector will generalize outside the test-bed. Theoretical bounds offered by statistical learning theory  #b22  offer guidance to algorithm developers, however the bounds themselves are generally quite weak and provide little useful information to end-users. The question we seek to answer in this paper is, how does one get a quick sense of a detector's performance for a specific application without the need for extensive groundtruthing?In this paper, we propose an interactive system by approaching this as a problem of smart sampling to estimate object/non-object proportions, a block diagram of the system is shown in fig 1. Let U be the set of all possible image patches among user provided images. Denote by D ⊂ U , a'detection-set' which were reported as containing the object of interest by the detector and D, the complement of the detection set. The challenge is to then sample informatively from D and D in a way that quickly allows us to estimate class proportions. Proportions are useful because they are independent of the size of dataset, and two of the important measures in detection theory, precision and recall are expressed as fractions. So given a large collection of unlabeled images, which are the best samples to pick that preserve "class proportions"? The answer is not trivial, random sampling methods are accurate only when class proportions are nearly equal. Assuming this step is solved, the next step is to ground truth the chosen samples by asking a simple yes/no question to a human, based on which we can estimate the proportion of objects within the set of detections. Performance for a detector is always measured relative to ground truth, therefore in the absence of labels we seek to estimate "perceived performance" and show that this is indeed close to actual performance measured with ground truth when using the proposed sampling procedures. We adopt and extend data sampling strategies and present a coherent framework to estimate false positives (incorrect detection) and a probabilistic estimation approach known as group testing to determine the false negatives (missed detection). We treat the detector as a black box and operate directly on the detections.The main idea is the following, first for different detection thresholds (γ) we feed the set of detections to a data summarization algorithm that identifies a small number of samples based on preserving some notion of information. These samples are generated for each γ and presented to the human who gives them a 1/0 label for object/non-object. If the samples are chosen well, the class proportions are expected to be preserved giving us an accurate estimate of precision (portion of total detections that were true).Recall is the other important measure, which is the portion of total objects that were detected. Once we estimate precision, we only need to estimate the number of false negatives from D to obtain recall. Unfortunately obtaining the complimentary set D is not easy and it is further complicated by the fact that the objects are very similar to background in the feature space. This results in the failure of any feature based approaches such as summarization and clustering. To address this issue we use the theory of statistical group testing that is employed to study estimation of disease propagation among large populations of plants, animals or humans. Essentially, we pool in multiple images before 'testing' them with the human for the presence of an object. This information is used to obtain estimates on the number of false negatives within D.Contributions 1) We present the first system that allows a user to estimate detector performance without the need for extensive groundtruthing. 2) We achieve this by employing probabilistic techniques such as pooled testing and smart sampling methods such as summarization by keeping a human in the loop. This will allow users to "test-drive" object detectors in the future while minimizing time and effort required for labeling. 3) Our system also gives the best performance estimate compared to simpler baselines with the least amount of human effort.

Relevant Work
In this section we outline the important work that has been done in the different fields of research relevant to our system.Object detection is the problem of putting a bounding box around an object within an image. Generally speaking, it involves running a window over the image at different scales to check for the highest match with some model representation of the object obtained from training data. In this work we look at pedestrian detection with three detectors, namely integral channel features (ChnFtrs)  #b8 , Multiple features with color self similarity (MultiFtrs+CSS)  #b24  and aggregate channel features (ACF)  #b7 , all of which have performed well on many standard datasets. For a detailed comparison of different pedestrian detectors on several datasets we refer the reader to  #b9 . There are several variations of each detector mainly varying in the choice of local descriptors or using extra information such as color, context etc. A popular feature used in most detectors is Histogram of Oriented Gradients (HOG) feature introduced by the Dalal-Triggs person detector  #b5 . Our system operates on the detections so it is applicable to any kind of object detector.Determining true positives with labels: Once a bounding box has been predicted, an overlap measure determines if the detection is a true or false positive based on its overlap area with the ground truth. Like any detection problem, the main quantities that determine the quality of a detector are the number of false positives and false negatives. An ideal detector would have both quantities to be low over various detection thresholds.Video summarization attempts to identify the most concise representation of a video while maximizing 'information' content. Usually, algorithms for summarization differ in their definition of information keeping the main application in mind. Recent methods in summarization have employed high-level contextual features and user input to present summaries  #b15 . The summarization algorithm we seek for this system is a more general form of clustering and must be able to deal with image based features rather than video based ones such as flow, object tracks etc. Precis  #b19  #b20  is one such algorithm that can work with image based features. Precis looks at maximizing 'diversity' and minimizing representational error among the data points.Human in the loop systems Many difficult problems in vision including segmentation, summarization, and even learning have been shown to benefit by human-in-the-loop systems. The motivation for such systems is to actively minimize human effort in tasks that are otherwise laborious such as image or video annotations, active video segmentaion etc  #b23 . Typically a human is asked a set of questions, the answers to which are used as feedback to the system to reduce the search space. For example, Branson et al.  #b2  develop a system that performs multi-object classification and uses pre-processing to identify a small set of important questions to ask the human, which then enables learning. This allows the authors to perform classification of subtly different classes which would have been very hard otherwise. Since we are working with unlabeled data, the role of the human is critical in determining the final estimated performance. Humans also have an extraordinary ability to identify objects using multiple cues  #b21 , which can be taken advantage of for image pooling.Group testing Pooled or group testing has it origins in the area of groundtruthing agricultural/biological samples, and its mathematical formulation has since been applied more broadly. The underlying premise is that individuals (blood samples, seed kernels etc.) are first pooled together into groups and the groups are tested for the presence of infection. When infection rate is low, there is an overwhelming evidence that pool testing can confer substantial benefits in terms of testing/labeling effort when compared to testing individually  #b13  #b3 . A complete discussion of the assumptions, robustness of the estimates as a function of group size, errors in testing etc. can be found in  #b3 . These ideas have been applied to estimating disease propagation in large populations of plants, animals or humans  #b13 .Image retrieval from large datasets The techniques described here are very similar to methods that search for similar images within large data collections. For example hashing methods such geometric min-hash  #b4 , and tree based methods such as  #b16  could potentially be used to find the number of true detections in D, but this requires one to have trained examples to learn the underlying data structure and we set out to work with unlabeled data with no prior training. It doesn't help much for the negative set either since the feature descriptors are expected to be poor due to occlusions, shadows etc., which caused the detector to miss them the first time.

Approach & Implementation
In this section we will describe our system in detail and the theory behind estimating detector performance. The system presumes that a detector is used off-the-shelf, and is completely agnostic to the detector's algorithm or features. A note on terminology used here, the term 'class' has no meaning in unlabeled data, but we refer to it as the label that would have been assigned by a human. Therefore, our estimate of quantities are 'perceived' but as we show, they are close to the true underlying values.Measuring Performance: Knowledge of the number of false positives (FP) and false negatives (FN) provides sufficient information in most cases to judge the performance of a detector. Some applications may require the false positives per image (FPPI) to be restricted below a specification before implementing it into their system, but our current system does not allow us to estimate FPPI, so we will focus on the two main quantities FP, FN.

Sampling from the detections set to estimate perceived precision
Interactively estimating the proportions of different classes (objects, non-objects here) from a large set of images essentially boils down to smart sampling, i.e. the problem would be solved if we were to pick the right proportion of samples from each class. Picking random samples is of little help in cases with skewed class proportions i.e., when the detector is operating at high precision. Given the fact that any detector based application is commercially viable only when the detectors are mature enough to have high precision and recall, the random sampling method is not suitable. One could use clustering algorithms such as K-means (K-medoids) and use the cluster centers as the samples, but this suffers from the same pitfalls as random sampling and does only marginally better.Let the set of detections at a specific threshold γ, be denoted as D, define D f p , D tp ⊂ D as the set of false and true detections respectively and D f n ⊂ D as the set of missed detections or false negatives. Then |D f p | << |D tp | in most cases, where |.| denotes the cardinality of a set. How does one sample informatively from D tp & D f p when they are not explicitly known? The first step is to extract a feature vector from each image patch, we use the histogram of oriented gradients for this purpose. The problem now is to identify the K γ (<< |D|) best samples, denoted by S from the data feature matrix X such that the proportion of Figure 2: Random sampling and K-medoids overestimate the proportion of pedestrians because they fail to retrieve samples from the smaller class of non-objects. Precis'  #b20  samples give a much closer estimate to the ground truth. Here the non-objects are highlighted for a fixed γ from the INRIA pedestrian dataset  #b5 , the perceived precision for random, K-means, Precis are 1, 0.9375, 0.8125 respectively compared to the actual precision = 0.7. elements in D tp and D f p are preserved. Since the number of false positives is far smaller than the number of true positives using algorithms such as K-medoids will result in picking centers that are mostly from D tp since it only looks to optimize representational error, resulting in poor proportion estimates. Instead we use Precis  #b19  #b20  to pick samples well distributed across each set. Precis solves for a set of samples S = {F i |i = 1, 2 . . . K γ }, that minimize representational error ('coverage') denoted by rep(S, X) and maximize diversity between chosen samples, denoted by div(S, X). These quantities are given byrep(S, X) = tr i F k ∈Vi (F k − F i )(F k − F i ) T , (1) div(S, X) = tr σ i (F i − F )(F i − F ) T ,(2)where V i is the partition corresponding to F i , i.e. V i are the elements of X that are closer to F i than any other element in S. F = 1 Homogenizing the detection set In general, samples chosen from D f p are not well behaved in the feature space because they contain everything but the object of interest. This can throw off any metric based algorithm such as Kmedoids due to outliers and Precis due to increased diversity etc., resulting in poor samples. To ensure better sample selection, we transform the data to a space where D f p and D tp are well separated. This transform, denoted by T , needs to be estimated only once per object class and is obtained by minimizing a cost function using data points from O T , a set of image patches with objects and O F a set of image patches without objects. Since both of these sets are unknown for unlabeled data, we will approximate them by picking O T = D γ H which is the detection set at a high confidence threshold γ H and O F = D γ L the non-detection set at a low confidence threshold γ L . This is a reasonable approximation since at γ H one expects very few false positives and at γ L one expects very few false negatives.Typically, we want to ensure that d T (x i , x j ) ≤ u, for (x i , x j ) ∈ O T and d T (x i , x j ) ≥ for x i ∈ O T & x j ∈ O F for some u, > 0.The loss function(s) depend mainly on the Euclidean norm on the transformed space, X T T T T X. An example of such constraints arec 1 = max(0, d T (x i , x j ) − u) for (x i , x j ) ∈ O T ,(3)c 2 = max(0, − d T (x i , x j )) for x i ∈ O T & x j ∈ O F .(4)Other loss functions can be used depending on the application. A constraint on T is imposed by a regularizing condition reg(T ) (such as T ≥ 0). A general cost function for m loss functions is given as follows:J 1 (T ) = reg(T ) + λ m i c i .(5)This is very similar to the metric learning problem and other examples of loss functions and regularizers can be found in  #b14 . In this paper, we use Information Theoretic Metric Learning (ITML)  #b6  to find the optimal T . The estimated transform is independent of the particular samples and is estimated once per object class. Once we have the optimal T , we solve for the best set of samples, S using Precis which minimizes the cost function:J 2 (S) = α rep(S, T X) + (1 − α) div(S, T X).(6)Finally, the set of samples are shown to a human who marks false positives. Typically K γ is chosen to be about 5 − 10% of the detections at γ. From this, estimated precision is calculated as : P γ = 1 − F P γ Kγ where F P γ is the perceived number of false positives at γ.

Pooled testing of samples from the detection complement
Metric based approaches such as clustering, Precis and random sampling severely underestimate the number of false negatives due multiple reasons: 1)The proportions of objects to non-objects are much smaller (∼ 1 − 5% as compared to at least 10% for false positives) and 2) the fact that the detector missed them, indicate that they are very hard to distinguish from the background in the feature space. For this reason, we use probabilistic methods such as pooled testing that allows us to quickly estimate the number of false negatives within the image population. Pooled testing is used often to estimate disease propagation within large populations of plants and animals. It is especially useful during the outbreak of an epidemic where there is a need to quickly estimate the extent of damage before taking action.In the estimation problem, the primary goal is to estimate p, the individual probability of infection by testing pools of size s, of individual samples for the infection. There are different ways of testing pools, we use the inverse binomial sampling method  #b18  which provides the fastest estimates. In this method, suppose that T pools need to be tested before n positive samples have been identified, then the maximum likelihood estimate of p is given bŷp = 1 − 1 − n T 1 s .(7)Better estimates of p that take into account unequal pool size, inaccurate testing etc. can be found in  #b3  #b13 .Before estimating the number of false negatives using (7), we need to accurately obtain D, where the image patches are such that each one contains at most a single object, this is not easy since objects can be of different scales within the same image and there may be multiple objects with occlusions. Assuming we have an accurate D, our problem is to estimate the number of patches with objects in them. This is a catch-22 situation since it is the detection problem all over again, therefore we resort to probabilistic methods like pooled testing. In order to obtain D, we make the assumptions that most objects in an image are of approximately the same size and that the objects are not occluding each other. This allows us to use bounding boxes obtained from the detector as an indicator of scale for an object within the image. Next the bounding box is used to divide the image into smaller patches, excluding regions previously detected. This generates D which contains a large set of image patches with a small number of objects (usually ∼ 1 − 5%). In cases of multiple detections, we choose the box with the average height and width.Approaches for Image Pooling The images need to be pooled together in a way that their individual characteristics (such as edges) are preserved. There are multiple ways to achieve this, and can be chosen specific to the application. In applying this to pedestrian detection we looked at three techniques namely, a) spatial averaging of two images b) Gradient domain averaging using the Frankot-Chellappa algorithm  #b12  and c) Poisson image blending  #b17 . Gradient domain techniques are appealing to use in this context since they can be tuned to preserve high frequency content (such as edges, corners) and leave out background. Concatenation of multiple images can also be effective instead of pooling them, but one must consider the trade-off between the time it takes for humans to analyze a single pooled image versus multiple individual images, currently there is no research suggesting either way and a thorough evaluation of this is left for future work. A qualitative comparison of the these methods is shown in fig 3. Based on our experience with multiple trials, we found that the simple spatial average pooling was suffcient for seeking interative feedback from a user. Thus, we report results via the simple spatial average pooling in experiments. 

Experiments
In this section we demonstrate our system and its performance estimates compared to performance obtained using ground truth. We show results on the INRIA Pedestrian dataset  #b5  and the ETH Pedestrian Dataset  #b10 , which are popularly used for pedestrian detection. The INRIA dataset is relatively simple with 2-4 pedestrians on average per image and of roughly the same scale. ETH dataset is more complex, with 10-12 pedestrians per frame and of varying sizes, it is acquired using a moving camera on a crowded street. We estimate the performance of three detectors namely Aggregate Channel Features (ACF)  #b7 , Inte- gral Channel Features (ChnFtrs)  #b8 , MultiFtr+CSS  #b24  on these datasets.

Interactively test-driving predestrian detectors
There has been great success in the field of pedestrian detection with a large number of excellent detectors proposed in the past few years. A good evaluation of the state of the art methods is available in  #b9 , the authors have also made available the detection outputs for several detectors and datasets on the web, we choose 3 detectors and 2 datasets to demonstrate the proof of concept.Note on using labels to generate results Samples obtained from a given sampling algorithm (random, Kmedoids or homogenized Precis) are shown to a human to identify the number of false positives, using which the 'perceived' precision rate is calculated as explained earlier.Since we work with labeled datasets, we simulate the process with the given label which enabled much faster results for the sake of testing and proof of concept. However multiple duplicate detections around an object are considered false positives when evaluating with ground truth where only the detection with the highest overlap is chosen as the true detection and the rest are considered false. It is impossible to tell duplicates apart by looking at the detections from unlabeled data. To account for this during run time, we consider all the duplicate detections to be true detections even though they are actually false detections.We used the detections for two datasets and estimated precision for different γ, the results for estimates based on only 10% of the total number of detections are shown in fig  4. It is seen that the proposed homogenized Precis outperforms K-means and random sampling significantly. However, in most cases there is still a positive bias in the estimate which we attribute to the duplicate false positives that are impossible to distinguish without true labels. 

Failure cases
The performance estimate using the Dalal and Triggs detector  #b5  is shown in fig 5. Precis has a poor estimate in this case compared to random sampling and K-means. This is because the general performance of the detector is far lower than state of the art detectors today, which results in many more false positives. Precis by construction is sensitive to diversity and often tends to pick many more false positives than pedestrians resulting in under estimating precision severely. Fortunately, this condition is not limiting since a detector is not used commercially until it is high performing.

Estimating the number of false negatives
Recall is the portion of objects that were correctly detected and can be completely described by γ, P γ , N γ , |D f n | where γ is the detection threshold, P γ is the precision, N γ is the number of detections and |D f n | is the number of false negatives or missed detections. All the quantities are known except |D f n | so we will focus on estimating the number of false negatives, which gives us all the information to calculate Recall.Estimating the number of false negatives is the second part of evaluating a detector. This is a much harder problem because a negative set is not clearly defined and could be extremely diverse. In obtaining D γ for different γ, the image patches are usually of low resolution (approx. 50 × 50 pixels), and are pooled together before being presented to a human. We found that because of the poor resolution of the images, smaller pool size proved most effective. We used pool size s = 2 in our experiments and randomly chose two images from the detection complement each time to pool them together. To use pooled testing we use the inverse binomial sampling approach where we fix n, the number of objects and make T a variable, from  #b6 . So the user is asked to ground truth pooled samples until they find n objects. The choice of n affects the estimate in a way that smaller n gives a quicker estimate but is more noisy. We fixed n = 2 and found that it was reliable and reasonably quick (in most cases, one can find 2 images with pedestrians before about 2% of images have been seen). Using (7) we can get the the ratio β of objects within D, which gives the number of false negatives as |D f n | = β × |D|. Estimated results are shown in fig 6 for all the detectors and both the datasets. It is observed that the estimated results are poorer in the ETH dataset, this is because the dataset is complex with several pedestrians per frame and of constantly varying scale (the images are taken from a moving camera). Obtaining an accurate D for constantly varying object scales is out of the scope of this work and we look towards addressing these issues in the future.

Discussion and Conclusion
In this paper, we introduce the problem of interactively test-driving object detectors in a user-centric manner, without the need for extensive ground-truthing. We presented the first system that is interactively able to provide estimates of the performance of an object detector without annotations. Although the problem is far from solved, the results shown in this work are promising. Using smart sampling techniques such as summarization and pooled testing, we show that the estimates obtained are close to those obtained using annotations and the effort required is significantly lesser than our baseline techniques. This points towards interactively evaluating classifiers, detectors etc. easily when purchasing them for tailored applications in the future. bias in the estimates for the ETH dataset is attributed to its complexity as it has multiple pedestrians per frame and constantly varying scale.